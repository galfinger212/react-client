{"version":3,"sources":["context/AuthReducer.js","context/AuthContext.js","config.js","apiCalls.js","Views/Home/Home.js","UIKit/Layouts/Line.js","UIKit/Elements/Icon.js","UIKit/Elements/Menu.js","components/topbar/Topbar.js","components/chatOnline/ChatOnline.js","components/chatOffline/chatOffline.js","components/message/Message.js","components/Piece/Piece.js","components/Timer/Timer.js","components/Triangle/Triangle.js","components/Backgammon/Backgammon.js","components/User/User.js","Views/ContactScreen/ContactScreen.js","Views/Login/Login.js","Views/Register/Register.js","Views/signOut/signOut.js","Views/HowToPlay/HowToPlay.js","Views/About/About.js","App.js","index.js"],"names":["AuthReducer","state","action","type","user","token","isFetching","error","payload","INITIAL_STATE","JSON","parse","localStorage","getItem","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","config","socket","url","loginCall","userCredential","a","axios","post","res","data","window","location","reload","response","status","alert","message","logoutCall","Home","className","Line","props","justify","Icon","i","Menu","useState","isOpen","setIsOpen","dropdownContainer","useRef","addEventListener","onCloseIsOpen","removeEventListener","e","current","contains","target","ref","onClick","title","open","close","map","item","enabled","onChange","to","handleItemClick","key","renderList","Topbar","initUser","initHistory","currentRout","history","handleOnChange","toValue","push","style","textDecoration","Person","Chat","ChatOnline","onlineUsers","currentId","onSelectedUser","initSelectedUser","online","setOnline","selectedUser","setSelectedUser","PF","process","getOnlineUsers","get","then","array","index","onUser","find","u","_id","userId","length","catch","err","console","log","handleClick","document","getElementById","background","o","id","src","profilePicture","alt","username","ChatOffline","users","setUsers","getUsers","Message","forwardRef","own","text","format","createdAt","seen","xmlns","width","height","x","y","d","fill","Piece","pieceKey","Timer","reachLimit","timeLimit","seconds","setSeconds","interval","setInterval","clearInterval","Triangle","Backgammon","propsBoard","currentBoard","userPlayId","initSocket","EndGame","points","setPoints","arrivalPoints","setArrivalPoints","nextTurn","setNextTurn","winStatus","setWinStatus","rolling","setRolling","dieOneValue","setDieOneValue","dieTwoValue","setDieTwoValue","dices","setDices","middleBar","setMiddleBar","p1IsNext","setP1IsNext","outSideBar","setOutSideBar","userPlay","setUserPlay","userAgainst","setUserAgainst","currentUserPlay","setCurrentUserPlay","selectedPiece","setSelectedPiece","getPointsWithoutActions","Promise","point","player","checkers","checkersP1","checkersP2","on","sender","senderId","currentPoints","currentMiddleBar","currentOutsideBar","Date","now","members","getPlayer","CalculateAllMoves","AllDices","newPoints","die","destination","canReceive","inHomeBoard","checkHomeBoard","canMove","numDice","checkCanBearOff","canBear","checkIfPlayerCanMove","checker","dice","canBearOff","highDie","sort","reverse","checkerBehind","homeBoard","piece","removeEnemyToTheMiddleBar","column","movePiece","indexDice","indexOf","splice","undefined","color","Math","abs","PassTurnToOtherUser","anyChecker","CheckCheckersOnBoard","emit","receiverId","pointsNoAction","sendCurrentPointsToEnemy","allPoints","renderOutSideBar","numberOfCheckers","items","renderMiddleBar","checkCanReceive","numColumn","includes","renderCheckers","last","indexInColumn","cubes","getElementsByClassName","classList","add","setTimeout","remove","dieOne","floor","random","dieTwo","promiseFunc","User","typing","name","setName","params","Points","Array","ContactsScreen","setOnlineUsers","currentChat","setCurrentChat","emojiPicker","SetEmojiPicker","setCurrentBoard","messages","setMessages","newMessage","setNewMessage","arrivalGameRequest","setArrivalGameRequest","sendSeen","setSendSeen","setTyping","approveGameRequest","setApproveGameRequest","arrivalMessage","setArrivalMessage","scrollRef","useContext","StartGameClick","StartChatClick","newRes","io","messageId","conversation","myConfirm","msg","timeout","inputs","querySelectorAll","filter","input","disabled","modal","elements","toggleModal","isModal","display","textContent","resolve","onclick","result","ok","newBoard","refreshToken","prev","put","updateModel","conversationId","getMessages","member","scrollIntoView","behavior","handleSubmit","preventDefault","m","emoji","onSelect","native","fillRule","clipRule","placeholder","autoComplete","autoFocus","LoginForm","password","useHistory","onSubmit","required","minLength","email","passwordAgain","setCustomValidity","SignOut","confirm","HowToPlay","frameBorder","allow","allowFullScreen","About","App","headers","auth","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"ilBAmCeA,EAnCK,SAACC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,CACLC,KAAM,KACNC,MAAO,KACPC,YAAY,EACZC,OAAO,GAEX,IAAK,gBACH,MAAO,CACLH,KAAMF,EAAOM,QACbH,MAAOH,EAAOM,QAAQH,MACtBC,YAAY,EACZC,OAAO,GAEX,IAAK,gBACH,MAAO,CACLH,KAAM,KACNC,MAAO,KACPC,YAAY,EACZC,OAAO,GAEX,IAAK,SACH,MAAO,CACLH,KAAM,KACNC,MAAO,KACPC,YAAY,EACZC,OAAO,GAEX,QACE,OAAON,I,OC5BPQ,EAAgB,CACpBL,KAAMM,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,KAClDR,MAAOO,aAAaC,QAAQ,UAAY,KACxCP,YAAY,EACZC,OAAO,GAIIO,EAAcC,wBAAcN,GAE5BO,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpC,EAA0BC,qBAAWlB,EAAaS,GAAlD,mBAAOR,EAAP,KAAckB,EAAd,KAUA,OARAC,qBAAU,WACRR,aAAaS,QAAQ,OAAQX,KAAKY,UAAUrB,EAAMG,SACjD,CAACH,EAAMG,OAEVgB,qBAAU,WACRR,aAAaS,QAAQ,QAASpB,EAAMI,SACnC,CAACJ,EAAMI,QAGR,cAACS,EAAYS,SAAb,CACEC,MAAO,CACLpB,KAAMH,EAAMG,KACZC,MAAOJ,EAAMI,MACbC,WAAYL,EAAMK,WAClBC,MAAON,EAAMM,MACbY,YANJ,SASGF,K,8DChCQQ,EAFA,CAAEC,OAAQ,+CAAgDC,IAAI,oDCGhEC,EAAS,uCAAG,WAAOC,EAAgBV,GAAvB,eAAAW,EAAA,6DACvBX,EAAS,CAAEhB,KAAM,gBADM,kBAGH4B,IAAMC,KAAKP,EAAOE,IAAM,cAAeE,GAHpC,OAGfI,EAHe,OAIrBd,EAAS,CAAEhB,KAAM,gBAAiBK,QAASyB,EAAIC,OAC/CC,OAAOC,SAASC,SALK,qDAOb,KAAIC,SAASC,OAPA,OAQd,MARc,QAWd,MAXc,wCAYjBC,MAAM,KAAIF,SAASJ,KAAKO,SAZP,oCAejBD,MAAM,EAAD,IAfY,6BAkBrBrB,EAAS,CAAEhB,KAAM,gBAAiBK,QAAQ,EAAD,KAlBpB,yDAAH,wDAsBTkC,EAAU,uCAAG,WAAOvB,GAAP,SAAAW,EAAA,sDACxBX,EAAS,CAAEhB,KAAM,WACjBgC,OAAOC,SAASC,SAFQ,2CAAH,sDCbRM,G,OATF,WAET,OACI,qBAAKC,UAAU,OAAf,SACI,oBAAIA,UAAU,QAAd,sC,2BCGGC,G,oBARF,SAACC,GACV,OACI,qBAAK,cAAY,UAAUF,UAAS,eAAUE,EAAMF,WAAaG,QAASD,EAAMC,QAAhF,SACKD,EAAM7B,aCGJ+B,EARF,SAACF,GACV,OACI,qBAAK,cAAY,UAAUF,UAAU,OAArC,SACI,mBAAG,cAAY,eAAeA,UAAS,UAAKE,EAAMG,EAAN,iBAAoBH,EAAMG,GAAM,SCuDzEC,G,OArDF,SAACJ,GACV,MAA4BK,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAoBC,mBAE1BnC,qBAAU,WAEN,OADAe,OAAOqB,iBAAiB,QAASC,GAC1B,WACHtB,OAAOuB,oBAAoB,QAASD,MAEzC,IAEH,IAYMA,EAAgB,SAACE,GAAO,IAAD,GACzB,OAAIL,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBM,eAAvB,aAAI,EAA4BC,SAA5B,OAAqCF,QAArC,IAAqCA,OAArC,EAAqCA,EAAGG,UAGxCT,GAAU,IAYlB,OACI,sBAAK,cAAY,UAAUT,UAAS,eAAUE,EAAMF,WAAamB,IAAKT,EAAtE,UACI,qBAAK,cAAY,gBAAgBV,UAAU,SAASoB,QA9BlC,WACtBX,GAAWD,IA6BP,SACI,eAAC,EAAD,WACI,sBAAM,cAAY,gBAAgBR,UAAU,OAA5C,SAAoDE,EAAMmB,MAAQnB,EAAMmB,MAAQ,KAChF,cAAC,EAAD,CAAMhB,EAAGG,EAASN,EAAMoB,KAAOpB,EAAMqB,aAdlC,WACf,GAAIf,GAAUN,EAAM7B,SAChB,OACI,qBAAK,cAAY,WAAW2B,UAAU,OAAtC,SACKE,EAAM7B,SAAW6B,EAAM7B,SAASmD,KAAI,SAAAC,GAAI,OAAI,qBAAKzB,WAAkC,IAAvByB,EAAKvB,MAAMwB,QAAoB,WAAa,GAAmBN,SAAgC,IAAvBK,EAAKvB,MAAMwB,QAAoB,YApB5J,SAACD,GACjBvB,EAAMyB,WACNzB,EAAMyB,SAASF,GACXA,EAAKvB,MAAM0B,IACXf,KAgBgLgB,CAAgBJ,IAAU,KAAzJ,SAAgKA,GAA3FA,EAAKK,QAAqG,UAanOC,QCsBEC,EArEA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpBC,EAAcxB,iBAAO,KACrBnD,EAAOmD,iBAAOsB,GACdG,EAAUzB,iBAAOuB,GAOjBG,EAAiB,SAACZ,GALF,IAACa,EAMjBb,EAAKvB,MAAMF,YANMsC,EAOLb,EAAKvB,MAAM0B,GAN3BQ,EAAQpB,QAAQuB,KAAKD,GACrBH,EAAYnB,QAAUsB,IASxB,OACE,sBAAK,cAAY,kBAAkBtC,UAAU,kBAA7C,UACE,qBAAK,cAAY,aAAaA,UAAU,aAAxC,SACE,eAAC,EAAD,CAAMG,QAAQ,UAAd,UACE,cAAC,EAAD,UACE,eAAC,EAAD,CAAMkB,MAAM,gBAAgBC,KAAK,aAAaC,MAAM,eAAeI,SAAUU,EAA7E,UACE,cAAC,EAAD,CAAMX,UAASlE,EAAKwD,QAAwBY,GAAG,IAAY5B,UAAU,UAArE,iBAAuD,KAGvD,cAAC,EAAD,CAAM4B,GAAIpE,EAAKwD,QAAU,WAAa,SAAkBhB,UAAU,UAAlE,SACGxC,EAAKwD,QAAU,WAAa,sBAAMhB,UAAU,aAAhB,qBADqB,KAGpD,eAAC,EAAD,CAAcA,UAAU,UAAxB,oBAEE,eAAC,EAAD,CAAMA,UAAU,QAAQsB,KAAK,eAAeC,MAAM,gBAAgBI,SAAUU,EAA5E,UACE,cAAC,EAAD,CAAMX,UAASlE,EAAKwD,QAAwBY,GAAG,cAAsB5B,UAAU,UAA/E,yBAAiE,KACjE,cAAC,EAAD,CAAM0B,UAASlE,EAAKwD,QAAwBY,GAAG,aAAqB5B,UAAU,UAA9E,4BAAgE,UAJ1D,KAOV,eAAC,EAAD,CAAcA,UAAU,UAAxB,iBAEE,eAAC,EAAD,CAAMA,UAAU,QAAQsB,KAAK,eAAeC,MAAM,gBAAgBI,SAAUU,EAA5E,UACE,cAAC,EAAD,CAAMT,GAAG,YAAoB5B,UAAU,UAAvC,wBAAyB,KACzB,cAAC,EAAD,CAAM4B,GAAG,QAAgB5B,UAAU,UAAnC,kBAAqB,UAJf,UASd,cAAC,EAAD,SAIJ,sBAAK,cAAY,cAAcA,UAAU,cAAzC,UACE,qBAAK,cAAY,cAAcA,UAAU,cAAzC,SACE,cAAC,IAAD,CAAM4B,GAAG,IAAIY,MAAO,CAAEC,eAAgB,QAAtC,SACE,sBAAMzC,UAAU,aAAhB,0BAGJ,sBAAK,cAAY,cAAcA,UAAU,cAAzC,UACE,qBAAK,cAAY,iBAAiBA,UAAU,iBAA5C,SACE,cAAC0C,EAAA,EAAD,MAEF,qBAAK,cAAY,iBAAiB1C,UAAU,iBAA5C,SACE,cAAC,IAAD,CAAM4B,GAAG,eAAeY,MAAO,CAAEC,eAAgB,QAAjD,SACE,cAACE,EAAA,EAAD,kB,gDCWCC,G,OAxEI,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBAC5D,EAA4BzC,mBAAS,IAArC,mBAAO0C,EAAP,KAAeC,EAAf,KACA,EAAwC3C,mBAASyC,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAKC,gCAHwE,SAUpEC,IAVoE,2EAUnF,sBAAArE,EAAA,sEACQC,IAAMqE,IAAI3E,EAAOE,IAAM,mBAAmB0E,MAAK,SAACpE,GAEpD,IADA,IAAIqE,EAAQ,GADgD,WAEnDC,GACP,IAAMnG,EAAOqF,EAAYc,GACnBC,EAASvE,EAAIC,KAAKuE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAQvG,EAAKwG,QAAUxG,EAAKwG,SAAWlB,KACvEc,GACFF,EAAMnB,KAAKqB,IAJND,EAAQ,EAAGA,EAAQd,EAAYoB,OAAQN,IAAU,EAAjDA,GAOTT,EAAUQ,MACTQ,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAZhB,4CAVmF,sBAKnF3F,oBAAS,sBAAC,sBAAAU,EAAA,sDACRqE,IADQ,2CAEP,CAACT,IAoBJtE,oBAAS,sBAAC,sBAAAU,EAAA,sDACmB,IAAvB2D,EAAYoB,QACdV,IAFM,2CAIP,CAACV,IAGJ,IAAMyB,EAAW,uCAAG,WAAO9G,GAAP,SAAA0B,EAAA,sDAEE,MAAhBiE,IACcoB,SAASC,eAAerB,EAAaY,KACvCvB,MAAMiC,WAAa,QAEnBF,SAASC,eAAehH,EAAKuG,KAC/BvB,MAAMiC,WAAa,YACjCrB,EAAgB5F,GAChBuF,EAAevF,GATG,2CAAH,sDAYjB,OACE,mCACE,sBAAKwC,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACGiD,EAAOgB,OAAS,EAAI,eAAiB,8BAEvChB,EAAOzB,KAAI,SAACkD,GAAD,OACV,sBAAKC,GAAE,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAGX,IAAkB/D,UAAU,mBAAmBoB,QAAS,kBAAMkD,EAAYI,IAAtF,UACE,sBAAK1E,UAAU,yBAAf,UACE,qBACEA,UAAU,gBACV4E,KACG,OAADF,QAAC,IAADA,OAAA,EAAAA,EAAGG,gBACCxB,EAAKqB,EAAEG,eACPxB,EAAK,sBAEXyB,IAAI,KACN,qBAAK9E,UAAU,uBAEjB,sBAAMA,UAAU,iBAAhB,gBAAkC0E,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAGK,aAZvC,OAAsBL,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAGX,eCGpBiB,G,OAxDK,SAAC,GAAgC,IAA9BnC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAClC,EAA0BvC,mBAAS,IAAnC,mBAAO0E,EAAP,KAAcC,EAAd,KACM7B,EAAKC,gCAFuC,SAInC6B,IAJmC,2EAIlD,sBAAAjG,EAAA,sEACQC,IAAMqE,IAAI3E,EAAOE,IAAM,mBAAmB0E,MAAK,SAACpE,GAEpD,IADA,IAAIqE,EAAQ,GADgD,WAEnDC,GACP,IAAMnG,EAAO6B,EAAIC,KAAKqE,GACPd,EAAYgB,MAAK,SAAAC,GAAC,OAAIA,EAAEE,SAAWxG,EAAKuG,QACxCvG,EAAKuG,MAAQjB,GAC1BY,EAAMnB,KAAK/E,IAJNmG,EAAQ,EAAGA,EAAQtE,EAAIC,KAAK2E,OAAQN,IAAU,EAA9CA,GAOTuB,EAASxB,MACRQ,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAZhB,4CAJkD,sBA8BlD,OAVA3F,oBAAS,sBAAC,sBAAAU,EAAA,sDACRiG,IADQ,2CAEP,CAACrC,IAEJtE,oBAAS,sBAAC,sBAAAU,EAAA,sDACmB,IAAvB2D,EAAYoB,QACdkB,IAFM,2CAIP,CAACtC,IAGF,mCACE,sBAAK7C,UAAU,cAAf,UACE,qBAAKA,UAAU,cAAf,2BAGCiF,EAAMzD,KAAI,SAACkD,GAAD,OACT,sBAAkB1E,UAAU,oBAA5B,UACE,sBAAKA,UAAU,0BAAf,UACE,qBACEA,UAAU,iBACV4E,KACG,OAADF,QAAC,IAADA,OAAA,EAAAA,EAAGG,gBACCxB,EAAKqB,EAAEG,eACPxB,EAAK,sBAEXyB,IAAI,KACN,qBAAK9E,UAAU,4BAEjB,sBAAMA,UAAU,kBAAhB,gBAAmC0E,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAGK,aAZxC,OAAUL,QAAV,IAAUA,OAAV,EAAUA,EAAGX,e,iBCpBRqB,EAlBCC,sBAAW,SAACnF,EAAOiB,GACjC,OACE,sBAAK,cAAY,aAAaA,IAAKA,EAAKnB,UAAWE,EAAMoF,IAAM,eAAiB,mBAAhF,UACGpF,EAAML,QAAQ0F,KACf,uBAAM,cAAY,eAAevF,UAAU,WAA3C,UACE,sBAAM,cAAY,kBAAkBA,UAAU,OAA9C,SACGwF,YAAOtF,EAAML,QAAQ4F,aAExB,sBAAM,cAAY,WAAWzF,UAAU,OAAvC,SACGE,EAAMoF,KAAOpF,EAAMwF,KAAO,qBAAK,cAAY,WAAWC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKlB,GAAG,mBAAmBmB,EAAE,OAAOC,EAAE,OAAvH,SAA8H,sBAAMC,EAAE,kbAAkbC,KAAK,cAC/kB/F,EAAMoF,IAAM,qBAAK,cAAY,WAAWK,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKlB,GAAG,mBAAmBmB,EAAE,OAAOC,EAAE,OAAvH,SAA8H,sBAAMC,EAAE,kbAAkbC,KAAK,cACzkB,cCCJC,G,cAdD,SAAChG,GAMX,OACI,qBAAK,cAAY,WACbkB,QAASlB,EAAMkB,QAAU,kBANb,SAAClB,GACjBA,EAAMkB,QAAQlB,GAKqBoE,CAAYpE,IAAS,KACpDF,UAAS,gBAAWE,EAAMF,UAAYE,EAAMF,UAAY,KAF3BE,EAAMiG,SAAWjG,EAAMiG,SAAW,MCiB5DC,G,OAvBD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UACzB,EAA8B/F,mBAAS,GAAvC,mBAAOgG,EAAP,KAAgBC,EAAhB,KAaA,OAXAhI,qBAAU,WACN,IAAIiI,EAOJ,OANAA,EAAWC,aAAY,WACfH,EAAUD,EAAY,GACtBD,IAEJG,GAAW,SAAAD,GAAO,OAAIA,EAAU,OACjC,KACI,kBAAMI,cAAcF,MAC5B,CAACF,IAGA,qBAAK,cAAY,WAAWvG,UAAU,MAAtC,SACI,sBAAK,cAAY,eAAeA,UAAU,YAA1C,UACKuG,EADL,OACkBD,EADlB,WCPGM,G,OAVE,SAAC1G,GAId,OACI,qBAAK,cAAY,cAAckB,QAASlB,EAAMkB,QAAU,kBAJxC,SAAClB,GACjBA,EAAMkB,QAAQlB,GAGgDoE,CAAYpE,IAAS,KAAMF,UAAS,UAAKE,EAAMF,eC8oBtG6G,EA/oBI,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,WAAYC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAE9DpI,EAAS6B,iBAAOsG,GAEtB,EAA4B1G,mBAAS,IAArC,mBAAO4G,EAAP,KAAeC,EAAf,KACA,EAA0C7G,mBAAS,MAAnD,mBAAO8G,EAAP,KAAsBC,EAAtB,KACA,EAAgC/G,mBAAS,MAAzC,mBAAOgH,EAAP,KAAiBC,EAAjB,KACA,EAAkCjH,mBAAS,MAA3C,mBAAOkH,EAAP,KAAkBC,EAAlB,KACA,EAA8BnH,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBC,EAAhB,KACA,EAAsCrH,mBAAS,MAA/C,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAAsCvH,mBAAS,MAA/C,mBAAOwH,EAAP,KAAoBC,EAApB,KACA,EAA0BzH,mBAAS,IAAnC,mBAAO0H,EAAP,KAAcC,EAAd,KACA,EAAkC3H,mBAAS,MAA3C,mBAAO4H,EAAP,KAAkBC,EAAlB,KACA,EAAgC7H,mBAAS,MAAzC,oBAAO8H,GAAP,MAAiBC,GAAjB,MACA,GAAoC/H,mBAAS,MAA7C,qBAAOgI,GAAP,MAAmBC,GAAnB,MACA,GAAgCjI,mBAAS,MAAzC,qBAAOkI,GAAP,MAAiBC,GAAjB,MACA,GAAsCnI,mBAAS,MAA/C,qBAAOoI,GAAP,MAAoBC,GAApB,MACA,GAA8CrI,mBAAS,MAAvD,qBAAOsI,GAAP,MAAwBC,GAAxB,MACA,GAA0CvI,mBAAS,MAAnD,qBAAOwI,GAAP,MAAsBC,GAAtB,MAlBkF,SAgEnEC,KAhEmE,8EAgElF,sBAAA/J,EAAA,+EACW,IAAIgK,SAAQ,SAAA7J,GACfA,EAAI8H,EAAO3F,KAAI,SAAC2H,GACZ,MAAO,CAAEC,OAAQD,EAAMC,OAAQC,SAAUF,EAAME,kBAH3D,4CAhEkF,sBAyElF7K,qBAAU,WACNkK,GAAY1B,GACZI,EAAUN,GACVsB,EAAa,CAAEkB,WAAY,EAAGC,WAAY,IAC1Cf,GAAc,CAAEc,WAAY,EAAGC,WAAY,IAC3CzK,EAAOkC,QAAQwI,GAAG,oBAAoB,SAAClK,GACnCgI,EAAiB,CACbmC,OAAQnK,EAAKoK,SACbC,cAAerK,EAAKqK,cACpBC,iBAAkBtK,EAAKsK,iBACvBC,kBAAmBvK,EAAKuK,kBACxBpE,UAAWqE,KAAKC,WAGxBjL,EAAOkC,QAAQwI,GAAG,eAAe,SAAClK,GAC9BkI,EAAY,CACRiC,OAAQnK,EAAKoK,SACbjE,UAAWqE,KAAKC,WAGxBjL,EAAOkC,QAAQwI,GAAG,UAAU,SAAClK,GACzBoI,EAAa,CACT+B,OAAQnK,EAAKoK,SACbjE,UAAWqE,KAAKC,WAGxB,IAAK,IAAIpG,EAAQ,EAAGA,EAAQoD,EAAaiD,QAAQ/F,OAAQN,IAAS,CAC9D,IAAMK,EAAS+C,EAAaiD,QAAQrG,GAChCqD,IAAehD,GAAQ4E,GAAe5E,GAE1CgD,IAAeD,EAAaiD,QAAQ,IACpClB,GAAmB9B,GACnBsB,IAAY,IAGZA,IAAY,KAEjB,IAGH9J,qBAAU,WACgB,OAAlB6I,IACAD,EAAUC,EAAcsC,eACxBvB,EAAaf,EAAcuC,kBAC3BpB,GAAcnB,EAAcwC,sBAEjC,CAACxC,IAGJ7I,qBAAU,WACW,OAAb+I,IACAuB,GAAmBL,KACH,IAAZd,GACAC,GAAYD,MAGrB,CAACJ,IAGJ/I,qBAAU,WACY,OAAdiJ,IACA7H,MAAM,+BACNsH,OAEL,CAACO,IAGJ,IAoBMwC,GAAY,SAAC5B,GAAD,OAAcA,EAAW,QAAU,SAoB/C6B,GAAoB,SAAC/C,EAAQgD,EAAU9B,EAAUF,GACnD,IAAIiC,EAAS,YAAOjD,GACpB,GAAKgD,EAAS,GAKV,GAAK9B,GAAYF,EAAUmB,WAAa,IAAQjB,GAAYF,EAAUoB,WAAa,EAAI,CAAC,IAAD,gBACnEY,GADmE,IACnF,2BAA0B,CAAC,IAAlBE,EAAiB,QAChBC,EAAcjC,EAAWgC,EAAM,EAAI,GAAKA,GAC1ClD,EAAOmD,GAAalB,SAAWa,GAAU5B,IACzClB,EAAOmD,GAAajB,SAAW,KAC3Be,EAAUE,GAAaC,WACvBH,EAAUE,GAAaC,WAAWhI,KAAK+H,GAGvCF,EAAUE,GAAaC,WAAa,CAACD,KATkC,oCAiBnF,IADA,IAAME,EAAcC,GAAetD,GAC1BxD,EAAQ,EAAGA,EAAQwD,EAAOlD,OAAQN,IAAS,CAEhD,GAAIwD,EAAOxD,IAAWwD,EAAOxD,GAAOyF,SAAWa,GAAU5B,GAAY,CAAC,IAAD,gBACjD8B,GADiD,IACjE,2BAA0B,CAAC,IAAlBE,EAAiB,QAChBC,EAAcjC,EAAW1E,EAAQ0G,EAAM1G,EAAQ0G,EACjDC,EAAc,IAAMA,GAAe,IAC/BnD,EAAOmD,GAAalB,SAAWa,GAAU5B,IACzClB,EAAOmD,GAAajB,SAAW,KAC3Be,EAAUzG,GAAO+G,QACjBN,EAAUzG,GAAO+G,QAAQnI,KAAK+H,GAG9BF,EAAUzG,GAAO+G,QAAU,CAACJ,KAVqB,+BAiBrE,GAAIE,IAAiBnC,GAAY1E,GAAS,KAAS0E,GAAY1E,GAAS,GAAK,CACzE,IAAIgH,EAAUC,GAAgBzD,EAAQxD,EAAOwG,GACzCQ,IACAP,EAAUzG,GAAOkH,QAAUF,SAM/C,MAAO,CAAExD,OAAQiD,IAGfU,GAAuB,SAACV,GAC1B,IAAIM,GAAU,EASd,OAPAN,EAAU5I,KAAI,SAAC2H,GAKX,OAHIA,EAAMuB,SAAWvB,EAAM0B,SAAW1B,EAAMoB,cACxCG,GAAU,GAEP,QAEJA,GAGLE,GAAkB,SAACzD,EAAQ4D,EAASC,GACtC,IAAIC,GAAa,EAEjB,GAAIF,GAAW,GAAKA,EAAU,IAAM5D,EAAO4D,GAAS3B,SAAWa,GAAU5B,IAAW,CAAC,IAAD,gBAChE2C,GADgE,IAChF,2BAAsB,CAAC,IAAdX,EAAa,SAEbhC,IAAa0C,EAAUV,IAAS,KAAShC,IAAa0C,EAAUV,KAAU,KAC3EY,EAAaZ,IAJ2D,8BAOhF,IAAKY,EAAY,CACb,IAAMC,EAAU,YAAIF,GAAMG,OAAOC,UAAU,GACvCC,GAAgB,EAEpB,GAAKhD,IAAa0C,EAAUG,EAAW,KAAS7C,IAAa0C,EAAUG,GAAY,EAAI,CACnF,GAAI7C,GACA,IAAK,IAAIhI,EAAI,GAAIA,EAAI0K,EAAS1K,IACtB8G,EAAO9G,GAAG+I,QAAUjC,EAAO9G,GAAG+I,SAAWa,GAAU5B,MACnDgD,GAAgB,QAIxB,IAAK,IAAIhL,EAAI,EAAGA,EAAI0K,EAAS1K,IACrB8G,EAAO9G,GAAG+I,QAAUjC,EAAO9G,GAAG+I,SAAWa,GAAU5B,MACnDgD,GAAgB,GAKvBA,IACDJ,EAAaC,KAK7B,OAAOD,GAGLR,GAAiB,SAACtD,GAEpB,IAAImE,GAAY,EAkBhB,OAhBAnE,EAAO3F,KAAI,SAAC2H,EAAOxF,GAcf,OAXI0E,IAAY1E,GAAS,IACD,UAAjBwF,EAAMC,SAKHf,IAAY1E,GAAS,GACP,UAAjBwF,EAAMC,UAJTkC,GAAY,GAQT,QAEJA,GAILhH,GAAc,SAACiH,GACjBvC,GAAiBuC,IAIfC,GAA4B,SAACC,GAC3BpD,GACAF,EAAUoB,aAEVpB,EAAUmB,aAEdnC,EAAOsE,GAAQpC,SAAW,EAC1BlC,EAAOsE,GAAQrC,OAASa,GAAU5B,KAIhCqD,GAAY,SAACxL,GACf,IAAIuL,EAASvL,EAAMuL,OAEnB,GAAKpD,IAAYF,EAAUmB,WAAa,IAClCjB,IAAYF,EAAUoB,WAAa,EAAI,EACX,IAA1BpC,EAAOsE,GAAQrC,QAAoBjC,EAAOsE,GAAQrC,SAAWa,GAAU5B,KACvElB,EAAOsE,GAAQpC,SAAW,EAC1BmC,GAA0BC,IAII,IAA1BtE,EAAOsE,GAAQrC,SACfjC,EAAOsE,GAAQrC,OAASa,GAAU5B,KAG1ClB,EAAOsE,GAAQpC,UAAY,EACvBhB,GACAF,EAAUmB,YAAc,EAExBnB,EAAUoB,YAAc,EAG5B,IAAMoC,EAAY1D,EAAM2D,QAAQvD,GAAWoD,EAAS,EAAI,GAAKA,GACzDE,GAAa,IACb1D,EAAM4D,OAAOF,EAAW,GACxBzD,EAASD,SAKb,GAAId,EAAO4B,GAAc0C,QAAQZ,cAAsBiB,IAAXL,EAAsB,CAC9DtE,EAAO4B,GAAc0C,QAAQpC,UAAY,EACK,IAA1ClC,EAAO4B,GAAc0C,QAAQpC,WAC7BlC,EAAO4B,GAAc0C,QAAQrC,QAAS,GAEtCf,GAAUE,GAAWe,aACpBf,GAAWgB,aAChB,IAAMoC,EAAY1D,EAAM2D,QAAQzE,EAAO4B,GAAc0C,QAAQZ,SACzDc,GAAa,IACb1D,EAAM4D,OAAOF,EAAW,GACxBzD,EAASD,QAGZ,EAE6B,IAA1Bd,EAAOsE,GAAQrC,SACfjC,EAAOsE,GAAQrC,OAASL,GAAcgD,OAGV,IAA5B5E,EAAOsE,GAAQpC,UAAkBlC,EAAOsE,GAAQrC,SAAWjC,EAAO4B,GAAc0C,QAAQrC,QACxFoC,GAA0BC,GAGgB,IAA1CtE,EAAO4B,GAAc0C,QAAQpC,WAC7BlC,EAAO4B,GAAc0C,QAAQrC,QAAS,GAG1CjC,EAAOsE,GAAQpC,UAAY,EAE3B,IAAM1F,EAAQwD,EAAO4B,GAAc0C,QAAQf,QAAQkB,QAAQH,GACvD9H,GAAS,GACTwD,EAAO4B,GAAc0C,QAAQf,QAAQmB,OAAOlI,EAAO,GAGvD,IAAIqH,EAAOgB,KAAKC,IAAIlD,GAAc0C,OAASA,GACrCE,EAAY1D,EAAM2D,QAAQZ,GAC5BW,GAAa,IACb1D,EAAM4D,OAAOF,EAAW,GACxBzD,EAASD,IAGbd,EAAO4B,GAAc0C,QAAQpC,UAAY,EAGjDjC,GAAU,SAAAD,GAAM,mBAAQA,MAEH,IAAjBc,EAAMhE,QACNiI,MAGiC,IA1QZ,SAAC/E,GAC1B,IAAIgF,GAAa,EAejB,OAbAhF,EAAO3F,KAAI,SAAC2H,GAWR,OATId,IAA6B,UAAjBc,EAAMC,OAElB+C,GAAa,EAGP9D,IAA6B,UAAjBc,EAAMC,SAExB+C,GAAa,GAEV,QAEJA,EA0PHC,CAAqBjF,KAAuBkB,IAAqC,IAAzBF,EAAUmB,aAChEjB,IAAqC,IAAzBF,EAAUoB,aAnP5BzK,EAAOkC,QAAQqL,KAAK,UAAW,CAC3B3C,SAAUjB,GACV6D,WAAY3D,KAEhB/I,MAAM,8BACNsH,MAmPI+B,GAAwB9B,GAAQ1D,MAAK,SAAA8I,GACjCC,GAAyBD,GACzB,IAAIE,EAAYvC,GAAkBqC,EAAgBtE,EAAOI,GAAUF,GAAWhB,QACtC,IAApC2D,GAAqB2B,IAAyC,IAAjBxE,EAAMhE,SACnDiI,KACAtM,MAAM,gCAEVwH,EAAUqF,GACVrF,EAAUqF,MAEdzD,GAAiB,QAKnBkD,GAAsB,WACxBhE,EAAS,IACTY,GAAmBH,IACnB7J,EAAOkC,QAAQqL,KAAK,eAAgB,CAChC3C,SAAUjB,GACV6D,WAAY3D,MAKd6D,GAA2B,SAACD,GAC9BzN,EAAOkC,QAAQqL,KAAK,oBAAqB,CACrC3C,SAAUjB,GACV6D,WAAY3D,GACZgB,cAAe4C,EACf3C,iBAAkBzB,EAClB0B,kBAAmBtB,MAKrBmE,GAAmB,SAACtD,EAAQuD,GAC9B,IAAMC,EAAQ,GAOd,OANID,EAAmB,IACnBC,EAAMrK,KAAK,cAAC,EAAD,CAAOwJ,MAAO3C,EAAQpJ,UAAW,cAAgBoJ,KACxDuD,EAAmB,GACnBC,EAAMrK,KAAK,qBAAKvC,UAAS,UAAgB,UAAXoJ,EAAqB,kBAAoB,mBAA5D,SAAkFuD,MAG9FC,GAILC,GAAkB,SAACzD,EAAQuD,GAC7B,IAAMC,EAAQ,GAOd,OANID,EAAmB,IACnBC,EAAMrK,KAAK,cAAC,EAAD,CAAOwJ,MAAO3C,EAAQpJ,UAAW,UAAc,UAAXoJ,EAAqB,iBAAmB,iBAA3C,KAAiEA,KACzGuD,EAAmB,GACnBC,EAAMrK,KAAK,qBAAKvC,UAAS,UAAgB,UAAXoJ,EAAqB,YAAc,aAAtD,SAAsEuD,MAGlFC,GAILE,GAAkB,SAACC,GAAe,IAAD,IACnC,SAAKhE,KAAa,UAAI5B,EAAM,OAAC4B,SAAD,IAACA,QAAD,EAACA,GAAe0C,QAAQf,eAAlC,aAAI,EAAuCsC,SAASD,MAAlE,UAAiF5F,EAAO4F,UAAxF,aAAiF,EAAmBxC,cAOtG0C,GAAiB,SAACxB,EAAQsB,GAE5B,IADA,IAAMH,EAAQ,GACLjJ,EAAQ,EAAGA,EAAQ8H,EAAOpC,SAAU1F,IAAS,CAClD,IAAIuJ,EAAO,IAELvJ,GAAS,GAAKA,GAAS8H,EAAOpC,SAAW,GAAe,GAAT1F,KAAgB8H,EAAOf,SAAWe,EAAOZ,WAC1FqC,EAAO,QAGPH,GAAa,GAAKA,GAAa,EAE3BtB,EAAOpC,SAAW,GAAK1F,GAAS8H,EAAOpC,SAAW,EAClDuD,EAAMrK,KAAK,qBAAKvC,UAAS,UAAuB,UAAlByL,EAAOrC,OAAqB,kBAAoB,kBAArD,qBAAmF2D,EAAnF,KAAd,SAAgHtB,EAAOpC,YAE7H1F,EAAQ,GACbiJ,EAAMrK,KAAK,cAAC,EAAD,CAAO4D,SAAQ,WAAM4G,EAAN,YAAmBpJ,GAASoI,MAAON,EAAOrC,OAAQqC,OAAQsB,EAAWI,cAAexJ,EAAOvC,QAAkB,KAAT8L,EAAc5I,GAAc,GAAItE,UAAWyL,EAAOrC,OAAP,gBAAyB2D,EAAzB,YAAsCG,GAAtC,iBAAyDvJ,MAIjOoJ,GAAa,GAAKA,GAAa,GAEhCtB,EAAOpC,SAAW,GAAK1F,GAAS8H,EAAOpC,SAAW,EAClDuD,EAAMrK,KAAK,qBAAKvC,UAAS,UAAuB,UAAlByL,EAAOrC,OAAqB,kBAAoB,kBAArD,oBAAkF,GAAK2D,EAAvF,KAAd,SAAoHtB,EAAOpC,YAEjI1F,EAAQ,GACbiJ,EAAMrK,KAAK,cAAC,EAAD,CAAO4D,SAAQ,WAAM4G,EAAN,YAAmBpJ,GAASoI,MAAON,EAAOrC,OAAQqC,OAAQsB,EAAWI,cAAexJ,EAAOvC,QAAkB,KAAT8L,EAAc5I,GAAc,GAAItE,UAAWyL,EAAOrC,OAAP,eAAwB,GAAK2D,EAA7B,YAA0CG,GAA1C,iBAA6DvJ,MAIrOoJ,GAAa,IAAMA,GAAa,GAEjCtB,EAAOpC,SAAW,GAAK1F,GAAS8H,EAAOpC,SAAW,EAClDuD,EAAMrK,KAAK,qBAAKvC,UAAS,UAAuB,UAAlByL,EAAOrC,OAAqB,eAAiB,eAAlD,oBAA4E2D,EAAY,IAAtG,SAA6GtB,EAAOpC,YAE1H1F,EAAQ,GACbiJ,EAAMrK,KAAK,cAAC,EAAD,CAAO4D,SAAQ,WAAM4G,EAAN,YAAmBpJ,GAASoI,MAAON,EAAOrC,OAAQqC,OAAQsB,EAAWI,cAAexJ,EAAOvC,QAAkB,KAAT8L,EAAc5I,GAAc,GAAItE,UAAWyL,EAAOrC,OAAP,eAAwB2D,EAAY,GAApC,YAA0CG,GAA1C,cAA0DvJ,MAIlOoJ,GAAa,IAAMA,GAAa,KAEjCtB,EAAOpC,SAAW,GAAK1F,GAAS8H,EAAOpC,SAAW,EAClDuD,EAAMrK,KAAK,qBAAKvC,UAAS,UAAuB,UAAlByL,EAAOrC,OAAqB,eAAiB,eAAlD,qBAA6E,GAAK2D,EAAlF,KAAd,SAA+GtB,EAAOpC,YAE5H1F,EAAQ,GACbiJ,EAAMrK,KAAK,cAAC,EAAD,CAAO4D,SAAQ,WAAM4G,EAAN,YAAmBpJ,GAASoI,MAAON,EAAOrC,OAAQqC,OAAQsB,EAAWI,cAAexJ,EAAOvC,QAAkB,KAAT8L,EAAc5I,GAAc,GAAItE,UAAWyL,EAAOrC,OAAP,gBAAyB,GAAK2D,EAA9B,YAA2CG,GAA3C,cAA2DvJ,OAIhP,OAAOiJ,GAGX,OACI,qCACI,sBAAK5M,UAAU,UAAf,UACK6I,KAAoBJ,GAAW,cAAC,EAAD,CAAOnC,UAAW,GAAID,WA5W/C,WACf4C,GAAwB9B,GAAQ1D,MAAK,SAAA8I,GACjCvD,GAAiB,MACjB5B,EAAUmF,GACV3M,MAAM,mBACNsM,WAuW6F,GACzF,sBAAKlM,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,mBACQ6I,KAAoBJ,GAAW,WAAa,gBADpD,YAGA,qBAAK7D,IAAO,0BACX2D,GAAamE,GAAiB,QAASnE,GAAWgB,YAAc,GAChEhB,GAAamE,GAAiB,QAASnE,GAAWe,YAAc,GAChEP,IAAiB5B,EAAO4B,GAAc0C,QAAQZ,QAC3C,wBAAQ7K,UAAU,aAAaoB,QAASsK,GAAxC,sBAEY,SAGxB,sBAAK1L,UAAU,QAAf,UACKyI,KAAaI,GAAkB,sBAAKlE,GAAG,UAAR,UAC5B,qBAAK3E,UAAU,OAAO4E,IAAKqD,EAAMhE,OAtiBtCX,GAsiBiD,kBAAcuE,EAAd,QAAkC,KAC9E,qBAAK7H,UAAU,OAAO4E,IAAKqD,EAAMhE,OAviBtCX,GAuiBiD,kBAAcyE,EAAd,QAAkC,MACjE,IAAZJ,EAAoB,wBAAQ3H,UAAU,UAAUoB,QArhBpD,WAAM,4CACf,sBAAAlC,EAAA,+EACW,IAAIgK,SAAQ,SAAA7J,GAEf,IADA,IAAI+N,EAAQ7I,SAAS8I,uBAAuB,QACnC1J,EAAQ,EAAGA,EAAQyJ,EAAMnJ,OAAQN,IAAS,CAClCyJ,EAAMzJ,GACd2J,UAAUC,IAAI,SAEvBC,YAAW,WACP,IAAK,IAAI7J,EAAQ,EAAGA,EAAQyJ,EAAMnJ,OAAQN,IAAS,CAClCyJ,EAAMzJ,GACd2J,UAAUG,OAAO,YAE3B,KACH,IAAIC,EAAS1B,KAAK2B,MAAsB,EAAhB3B,KAAK4B,UAAgB,EACzCC,EAAS7B,KAAK2B,MAAsB,EAAhB3B,KAAK4B,UAAgB,EAC7C9F,EAAe4F,GACf1F,EAAe6F,GAEXxO,EADAqO,IAAWG,EACP,CAACH,EAAQA,EAAQA,EAAQA,GAGzB,CAACA,EAAQG,QArBzB,4CADe,uBAAC,WAAD,gCA2BfC,GAAcrK,MAAK,SAAAuH,GACf9C,EAAS8C,GACT/B,GAAwB9B,GAAQ1D,MAAK,SAAA8I,GACjC3E,GAAYD,GACZ,IAAI8E,EAAYvC,GAAkBqC,EAAgBvB,EAAM3C,GAAUF,GAAWhB,QAErC,IAApC2D,GAAqB2B,KACrBP,KACAtM,MAAM,gCAEVwH,EAAUqF,UAgfe,kBAA2D,MAC3E,GACT,sBAAKzM,UAAU,WAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,CAAUyL,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,yBAAoB8M,GAAgB,IAAM,WAAa,MAEpE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,0BAAqB8M,GAAgB,IAAM,WAAa,MAErE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,yBAAoB8M,GAAgB,IAAM,WAAa,MAEpE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,0BAAqB8M,GAAgB,IAAM,WAAa,MAErE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,yBAAoB8M,GAAgB,IAAM,WAAa,MAEpE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,0BAAqB8M,GAAgB,IAAM,WAAa,SAGzE,sBAAK9M,UAAU,aAAf,UACI,cAAC,EAAD,CAAUyL,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,uBAAkB8M,GAAgB,IAAM,WAAa,MAElE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,wBAAmB8M,GAAgB,IAAM,WAAa,MAEnE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,uBAAkB8M,GAAgB,GAAK,WAAa,MAEjE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,wBAAmB8M,GAAgB,GAAK,WAAa,MAElE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,uBAAkB8M,GAAgB,GAAK,WAAa,MAEjE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,wBAAmB8M,GAAgB,GAAK,WAAa,YAI1E,qBAAK9M,UAAU,eAEf,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,CAAUyL,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,yBAAoB8M,GAAgB,IAAM,WAAa,MAEpE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,0BAAqB8M,GAAgB,IAAM,WAAa,MAErE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,yBAAoB8M,GAAgB,IAAM,WAAa,MAEpE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,0BAAqB8M,GAAgB,IAAM,WAAa,MAErE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,yBAAoB8M,GAAgB,IAAM,WAAa,MAEpE,cAAC,EAAD,CAAUrB,OAAQ,GAAIrK,QAAS0L,GAAgB,IAAMpB,GAAY,iBAAM,IACnE1L,UAAS,0BAAqB8M,GAAgB,IAAM,WAAa,SAGzE,sBAAK9M,UAAU,aAAf,UACI,cAAC,EAAD,CAAUyL,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,uBAAkB8M,GAAgB,GAAK,WAAa,MAEjE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,wBAAmB8M,GAAgB,GAAK,WAAa,MAElE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,uBAAkB8M,GAAgB,GAAK,WAAa,MAEjE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,wBAAmB8M,GAAgB,GAAK,WAAa,MAElE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,uBAAkB8M,GAAgB,GAAK,WAAa,MAEjE,cAAC,EAAD,CAAUrB,OAAQ,EAAGrK,QAAS0L,GAAgB,GAAKpB,GAAY,iBAAM,IACjE1L,UAAS,wBAAmB8M,GAAgB,GAAK,WAAa,YAIzE3F,EAAO3F,KAAI,SAACiK,EAAQsB,GAAT,OACR,mCACKE,GAAexB,EAAQsB,QAIhC,qCACK5E,EAAY0E,GAAgB,QAAS1E,EAAUoB,YAAc,GAC7DpB,EAAY0E,GAAgB,QAAS1E,EAAUmB,YAAc,aCzmBnEyE,G,OAjCF,SAAC,GAAgC,IAA9B/J,EAA6B,EAA7BA,OAAQyF,EAAqB,EAArBA,OAAQuE,EAAa,EAAbA,OACtB3K,EAAKC,gCACX,EAAwB/C,mBAAS,MAAjC,mBAAO0N,EAAP,KAAaC,EAAb,KASA,OAPA1P,oBAAS,sBAAC,sBAAAU,EAAA,sEACAC,IAAMqE,IAAI3E,EAAOE,IAAP,UAAwB,CAAEoP,OAAQ,CAAEnK,OAAQA,KAAYP,MAAK,SAACpE,GAC1E6O,EAAQ7O,EAAIC,KAAKyF,aAClBb,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAJV,2CAMP,IAEC,sBAAK,cAAY,WAAWnE,UAAU,WAAtC,UACI,qBAAK,cAAY,SAASA,UAAU,SAApC,SACI,qBACI4E,KACU,OAAN6E,QAAM,IAANA,OAAA,EAAAA,EAAQ5E,gBACFxB,EAAKoG,EAAO5E,eACZxB,EAAK,sBAEfyB,IAAI,OAGZ,sBAAK,cAAY,WAAW9E,UAAU,OAAtC,UACI,sBAAM,cAAY,eAAlB,SACKiO,IAEJD,EAAS,sBAAM,cAAY,aAAahO,UAAU,SAAzC,uBAAqE,WCnBzFoO,EAASC,MAAM,IAAIpI,KAAK,CAAEmD,QAAQ,EAAOC,SAAU,IA2b1CiF,EAzbQ,WACnB,MAAsC/N,mBAAS,IAA/C,mBAAOsC,EAAP,KAAoB0L,EAApB,KACA,EAAsChO,mBAAS,MAA/C,mBAAOiO,EAAP,KAAoBC,EAApB,KACA,EAAsClO,oBAAS,GAA/C,mBAAOmO,EAAP,KAAoBC,EAApB,KACA,EAAwCpO,mBAAS,MAAjD,mBAAOwG,EAAP,KAAqB6H,EAArB,KACA,EAAgCrO,mBAAS,IAAzC,mBAAOsO,EAAP,KAAiBC,EAAjB,KACA,EAAoCvO,mBAAS,IAA7C,mBAAOwO,EAAP,KAAmBC,EAAnB,KACA,EAAoDzO,mBAAS,MAA7D,mBAAO0O,EAAP,KAA2BC,EAA3B,KACA,EAAgC3O,mBAAS,MAAzC,mBAAO4O,EAAP,KAAiBC,EAAjB,KACA,EAA4B7O,mBAAS,MAArC,mBAAOyN,EAAP,KAAeqB,EAAf,KACA,GAAoD9O,mBAAS,MAA7D,qBAAO+O,GAAP,MAA2BC,GAA3B,MACA,GAA4ChP,mBAAS,MAArD,qBAAOiP,GAAP,MAAuBC,GAAvB,MACA,GAAwClP,mBAAS,MAAjD,qBAAO4C,GAAP,MAAqBC,GAArB,MACMtE,GAAS6B,mBACT+O,GAAY/O,mBACVnD,GAASmS,qBAAWzR,GAApBV,KAQFoS,GAAc,uCAAG,sBAAA1Q,EAAA,sDACnBJ,GAAOkC,QAAQqL,KAAK,kBAAmB,CACnC3C,SAAUlM,GAAKuG,IACfuI,WAAYnJ,GAAaY,MAHV,2CAAH,qDAQd8L,GAAc,uCAAG,sBAAA3Q,EAAA,sEACbC,IAAMqE,IAAI3E,EAAOE,IAAP,8BAAoCvB,GAAKuG,IAAzC,YAAgDZ,GAAaY,MAAON,MAAK,SAACpE,GACtFoP,EAAepP,EAAIC,SACpB4E,MAFG,+BAAAhF,EAAA,MAEG,WAAOiF,GAAP,SAAAjF,EAAA,yDACuB,MAAxBiF,EAAIzE,SAASC,OADZ,gCAEKR,IAAMC,KAAKP,EAAOE,IAAP,iBAA+B,CAAE2K,SAAUlM,GAAKuG,IAAKuI,WAAYnJ,GAAaY,MAAON,MAAK,SAACqM,GACxGrB,EAAeqB,EAAOxQ,SACvB4E,OAAM,SAACC,GACNC,QAAQC,IAAIF,MALf,2CAFH,uDADa,2CAAH,qDAcpB3F,qBAAU,WACNM,GAAOkC,QAAU+O,aAAGlR,EAAOC,QAC3BA,GAAOkC,QAAQwI,GAAG,cAAc,SAAClK,GAC7BmQ,GAAkB,CACdhG,OAAQnK,EAAKoK,SACbnE,KAAMjG,EAAKiG,KACXyK,UAAW1Q,EAAK0Q,UAChBvK,UAAWqE,KAAKC,WAGxBjL,GAAOkC,QAAQwI,GAAG,kBAAkB,SAAClK,GACjC4P,EAAsB,CAClBzF,OAAQnK,EAAKoK,SACb3C,aAAczH,EAAKyH,aACnBtB,UAAWqE,KAAKC,WAGxBjL,GAAOkC,QAAQwI,GAAG,sBAAsB,SAAClK,GACrCiQ,GAAsB,CAClB9F,OAAQnK,EAAKoK,SACb3C,aAAczH,EAAKyH,aACnBtB,UAAWqE,KAAKC,WAGxBjL,GAAOkC,QAAQwI,GAAG,WAAW,SAAClK,GAC1B8P,EAAY,CACR3F,OAAQnK,EAAKoK,SACbuG,aAAc3Q,EAAK2Q,aACnBxK,UAAWqE,KAAKC,WAGxBjL,GAAOkC,QAAQwI,GAAG,aAAa,SAAClK,GAC5B+P,EAAU,CACN5F,OAAQnK,EAAKoK,SACbsE,OAAQ1O,EAAK0O,OACbvI,UAAWqE,KAAKC,WASpBqE,EAAO,IAAM,CAAEhF,OAAQ,QAASC,SAAU,GAI1C+E,EAAO,GAAK,CAAEhF,OAAQ,QAASC,SAAU,KAG9C,IAsBH,SAAS6G,GAAUC,EAAKC,GACpB,IAAMC,EAAS,YAAI9L,SAAS+L,iBAAiB,4BAA4BC,QAAO,SAAAC,GAAK,OAAKA,EAAMC,YAC1FC,EAAQnM,SAASC,eAAe,SAChCmM,EAAWD,EAAMrS,SAAS,GAAGA,SACnC,SAASuS,EAAYC,GAAU,IAAD,gBACNR,GADM,IAC1B,oCAAkCI,SAAWI,GADnB,8BAE1BH,EAAMlO,MAAMsO,QAAUD,EAAU,QAAU,OAC1CF,EAAS,GAAGI,YAAcF,EAAUV,EAAM,GAE9C,OAAO,IAAIjH,SAAQ,SAAC8H,GAChBJ,GAAY,GACZD,EAAS,GAAGM,QAAU,kBAAMD,GAAQ,IACpCL,EAAS,GAAGM,QAAU,kBAAMD,GAAQ,IACpCxD,WAAWwD,EAASZ,MACrB3M,MAAK,SAAAyN,GAEJ,OADAN,GAAY,GACLM,KA9Bf1S,qBAAU,WACoB,MAAtB8Q,KACuC,MAAnCA,GAAmBvI,cACnB6H,EAAgBU,GAAmBvI,cACnC0H,EAAe,MACfrL,GAAgB,OAGhBxD,MAAM,uDAGf,CAAC0P,KAwBJ9Q,qBAAU,WACoB,MAAtByQ,GAA4B,uCAC5B,sBAAA/P,EAAA,sEACUC,IAAMqE,IAAI3E,EAAOE,IAAP,UAAwB,CAAEoP,OAAQ,CAAEnK,OAAQiL,EAAmBxF,UAAYhG,MAAK,SAACpE,GAE7F,OADQ6Q,GAAU,oCAAD,OAAqC7Q,EAAIC,KAAKyF,SAA9C,OAA6D,KACrEtB,KAAF,uCAAO,WAAM0N,GAAN,SAAAjS,EAAA,0DACNiS,EADM,gCAEAhS,IAAMC,KAAKP,EAAOE,IAAP,SAAuB,CAAE2K,SAAUlM,GAAKuG,IAAKuI,WAAY2C,EAAmBxF,OAAQ1C,aAAcqH,IAAU3K,MAAK,SAAC2N,GAC/HxC,EAAgBwC,EAAS9R,MACzBmP,EAAe,MACfrL,GAAgB,MAChBtE,GAAOkC,QAAQqL,KAAK,yBAA0B,CAC1C3C,SAAUlM,GAAKuG,IACfuI,WAAY2C,EAAmBxF,OAC/B1C,aAAcqK,EAAS9R,UAE5B4E,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAZV,6BAeNrF,GAAOkC,QAAQqL,KAAK,yBAA0B,CAC1C3C,SAAUlM,GAAKuG,IACfuI,WAAY2C,EAAmBxF,OAC/B1C,aAAc,OAlBZ,gCAqBHoK,GArBG,2CAAP,0DAuBRjN,OAAM,SAACC,GACNC,QAAQC,IAAIF,MA3BpB,2CAD4B,oDA+B5BkN,KAEL,CAACpC,IAGJzQ,qBAAU,WACNM,GAAOkC,QAAQqL,KAAK,UAAW7O,GAAKuG,KACpCjF,GAAOkC,QAAQwI,GAAG,YAAY,SAACvE,GAC3BsJ,EACItJ,QAGT,CAACzH,KAGJgB,oBAAS,sBAAC,sBAAAU,EAAA,0DACFsQ,MAAc,OACdhB,QADc,IACdA,OADc,EACdA,EAAaxE,QAAQgD,SAASwC,GAAe/F,SAF3C,uBAGFqF,GAAY,SAACwC,GAAD,4BAAcA,GAAd,CAAoB9B,QAH9B,SAIIrQ,IAAMoS,IAAI1S,EAAOE,IAAM,aAAeyQ,GAAeQ,WAAW9L,OAAM,SAACC,GACzEC,QAAQC,IAAIF,MALd,uBAOIhF,IAAMqE,IAAI3E,EAAOE,IAAP,8BAAoCvB,GAAKuG,IAAzC,YAAgDyL,GAAe/F,SAAUhG,MAAK,SAACwM,GAC3FnR,GAAOkC,QAAQqL,KAAK,WAAY,CAC5B3C,SAAUlM,GAAKuG,IACfuI,WAAYkD,GAAe/F,OAC3BwG,aAAcA,EAAa3Q,UAEhC4E,OAAM,SAACC,GACsB,MAAxBA,EAAIzE,SAASC,OACbyE,QAAQC,IAAI,0BAGZD,QAAQC,IAAIF,MAlBlB,2CAsBP,CAACqL,KAGJhR,oBAAS,sBAAC,sBAAAU,EAAA,sDACW,OAAbiQ,GACAV,EAAeU,EAASc,cAFtB,2CAIP,CAACd,IAGJ3Q,qBAAU,WACFgQ,GACiB,uCAAG,sBAAAtP,EAAA,+EAENC,IAAMqE,IAAI3E,EAAOE,IAAM,cAAb,OAA4ByP,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAazK,MAAKN,KAAxD,+BAAAvE,EAAA,MAA6D,WAAOG,GAAP,iBAAAH,EAAA,0DAAAA,EAAA,iBACtDyE,GADsD,eAAAzE,EAAA,0DAErDW,EAAUR,EAAIC,KAAKqE,IACb8F,SAAWjM,GAAKuG,IAH+B,oBAIlC,IAAjBlE,EAAQ6F,KAJ2C,gCAM7CvG,IAAMoS,IAAI1S,EAAOE,IAAM,aAAec,EAAQkE,KAAKN,KAAnD,+BAAAvE,EAAA,MAAwD,WAAOG,GAAP,SAAAH,EAAA,sEACpDC,IAAMqE,IAAI3E,EAAOE,IAAP,8BAAoCM,EAAIC,KAAKkS,YAAYC,iBAAkBhO,MAAK,SAACwM,GAC7FnR,GAAOkC,QAAQqL,KAAK,WAAY,CAC5B3C,SAAUlM,GAAKuG,IACfuI,WAAYzM,EAAQ4J,OACpBwG,aAAcA,EAAa3Q,UAEhC4E,OAAM,SAACC,GACsB,MAAxBA,EAAIzE,SAASC,OACbyE,QAAQC,IAAI,0BAGZD,QAAQC,IAAIF,MAZsC,2CAAxD,uDAeHD,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAtBmC,yGACtDR,EAAQtE,EAAIC,KAAK2E,OAAS,EAD4B,YACzBN,GAAS,GADgB,0CACtDA,GADsD,oFACbA,IADa,uBA8B/DmL,EAAYzP,EAAIC,MA9B+C,4CAA7D,uDA+BH4E,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAlCJ,sDAqCZC,QAAQC,IAAR,MArCY,wDAAH,oDAwCjBqN,KAEL,CAAClD,IAGJhQ,qBAAU,WACN,GAAIgQ,EAAa,CACb,IAAMlC,EAAakC,EAAYxE,QAAQnG,MACnC,SAAC8N,GAAD,OAAYA,IAAWnU,GAAKuG,OAEN,IAAtBgL,EAAW9K,QACXnF,GAAOkC,QAAQqL,KAAK,aAAc,CAC9B3C,SAAUlM,GAAKuG,IACfuI,WAAYA,EACZ0B,QAAQ,IAGZe,EAAW9K,OAAS,GACpBnF,GAAOkC,QAAQqL,KAAK,aAAc,CAC9B3C,SAAUlM,GAAKuG,IACfuI,WAAYA,EACZ0B,QAAQ,OAIrB,CAACe,IAGJvQ,qBAAU,WAAO,IAAD,EACZ,UAAAkR,GAAU1O,eAAV,SAAmB4Q,eAAe,CAAEC,SAAU,aAC/C,CAAChD,IAGJ,IAAMiD,GAAY,uCAAG,WAAO/Q,GAAP,iBAAA7B,EAAA,6DACjB6B,EAAEgR,iBACIlS,EAAU,CACZ4J,OAAQjM,GAAKuG,IACbwB,KAAMwJ,EACNrJ,MAAM,EACN+L,eAAgBjD,EAAYzK,KAE1BuI,EAAakC,EAAYxE,QAAQnG,MACnC,SAAC8N,GAAD,OAAYA,IAAWnU,GAAKuG,OATf,kBAYP5E,IAAMC,KAAKP,EAAOE,IAAM,YAAac,GAAS4D,MAAK,SAACpE,GACtD,IAAM2Q,EAAY3Q,EAAIC,KAAKyE,IAC3BjF,GAAOkC,QAAQqL,KAAK,cAAe,CAC/B3C,SAAUlM,GAAKuG,IACfuI,aACA0D,UAAWA,EACXzK,KAAMwJ,IAEVD,EAAY,GAAD,mBAAKD,GAAL,CAAexP,EAAIC,QAC9B0P,EAAc,OACf9K,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAvBH,uDA0BbC,QAAQC,IAAR,MA1Ba,yDAAH,sDAyClB,OACI,mCACI,sBAAKrE,UAAU,YAAf,UACI,qBAAK2E,GAAG,QAAR,SACI,gCACI,wBACA,wCACA,iDAGR,sBAAK3E,UAAU,WAAf,UACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACI,wCAGA,sCACKxC,SADL,IACKA,QADL,EACKA,GAAMuH,cAGf,gCACI,wBAAQ/E,UAAU,SAASoB,QAASyO,GAAgBY,SAA2B,OAAjBtN,GAA9D,SACI,qBAAKnD,UAAU,SAAS4E,IAA8B,yBAE1D,wBAAQxD,QAASwO,GAAgBa,SAA2B,OAAjBtN,GAA3C,SACI,qBAAKnD,UAAU,SAAS4E,IAA8B,kCAI1C,IAAvB/B,EAAYoB,OACT,8BAEI,sBAAKjE,UAAU,oBAAf,UACI,cAAC,EAAD,CACIgD,iBAAkBG,GAClBN,YAAaA,EACbC,UAAWtF,GAAKuG,IAChBhB,eAjWL,SAACvF,GACxB4F,GAAgB5F,MAkWQ,cAAC,EAAD,CACIqF,YAAaA,EACbC,UAAWtF,GAAKuG,WAInB,qBAAK/D,UAAU,UAAf,qCAKjB,8BACK+G,EAAgB,mCACb,cAAC,EAAD,CAAYG,QA/RR,WACpB0H,EAAgB,MAChBxL,GAAgB,OA6RsC6D,WAAYnI,GAAOkC,QAASgG,WAAYxJ,GAAKuG,IAAKgD,aAAcA,EAAcD,WAAYsH,MAC7H,KAEVI,EACG,qBAAKxO,UAAU,OAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,EAAD,CAAMgO,UAAQA,GAAUQ,EAAYxE,QAAQnG,MAAK,SAAC8N,GAAD,OAAYA,IAAWnU,GAAKuG,SAASiK,EAAOvE,SAASuE,EAAOA,OACzGvE,OAAQjM,GAAMwG,OAAQb,GAAaY,MACvC,sBAAK/D,UAAU,eAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,mCACK6O,EAASrN,KAAI,SAACwQ,EAAGrO,GAAJ,OACV,cAAC,EAAD,CAAqB+B,KAAMsM,EAAEtM,KAAMvE,IAAKuO,GAAW7P,QAASmS,EAAG1M,IAAK0M,EAAEvI,SAAWjM,GAAKuG,KAAxEJ,QAGrB+K,EAAc,qBAAK1O,UAAU,iBAAf,SAAiC,cAAC,IAAD,CAAQiS,MAAM,WAAW5Q,MAAM,eAAe6Q,SA7E7G,SAAAnR,GACb,IAAIkR,EAAQlR,EAAEoR,OACdnD,EAAcD,EAAakD,QA2E8H,MAGjI,sBAAKjS,UAAU,uBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,cAAcoB,QA5E3C,WAClBuN,GAAgBD,IA2EqE/I,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKlB,GAAG,SAASmB,EAAE,OAAOC,EAAE,OAAtI,SAA6I,sBAAMqM,SAAS,UAAUC,SAAS,UAAUrM,EAAE,iqBAAiqBC,KAAK,gBAEr2B,uBAAOjG,UAAU,YACb2E,GAAG,eACHsJ,KAAK,QACLqE,YAAY,iBACZC,aAAa,MACbC,WAAS,EACT7Q,SAAU,SAACZ,GAAD,OAAOiO,EAAcjO,EAAEG,OAAOtC,QACxCA,MAAOmQ,IACX,qBAAK/O,UAAU,QAAf,SACI,mBAAGA,UAAU,uBAEjB,wBAAQA,UAAU,OAAOoB,QAAS0Q,GAAlC,SACI,qBAAK9R,UAAU,SAAf,+BAWpB,SCxXLyS,G,OA3DG,WACd,IAAM1N,EAAWpE,mBACX+R,EAAW/R,mBACjB,EAAiCgP,qBAAWzR,GAApCR,EAAR,EAAQA,WAAYa,EAApB,EAAoBA,SACd6D,EAAUuQ,cAchB,OACI,uBAAMhO,GAAG,YAAYiO,SAbL,SAAC7R,GACjBA,EAAEgR,iBACF/S,EACI,CAAE+F,SAAUA,EAAS/D,QAAQpC,MAAO8T,SAAUA,EAAS1R,QAAQpC,OAC/DL,IASJ,UACI,oBAAIoG,GAAG,cAAP,wBACA,sBAAK3E,UAAU,MAAf,UACI,6CACA,uBACIsS,YAAY,WACZ/U,KAAK,OACLsV,UAAQ,EACR1R,IAAK4D,OAGb,sBAAK/E,UAAU,MAAf,UACI,6CACA,uBACIsS,YAAY,WACZ/U,KAAK,WACLsV,UAAQ,EACRC,UAAU,IACV3R,IAAKuR,OAEb,qBAAK/N,GAAG,SAAS3E,UAAU,MAA3B,SACI,wBAAQzC,KAAK,SAASkT,SAAU/S,EAAhC,sBAKJ,qBAAKsC,UAAU,kBAAf,8CAGA,qBAAK2E,GAAG,SAAS3E,UAAU,MAA3B,SACI,wBAAQA,UAAU,sBAAsBoB,QAnCnC,WACbgB,EAAQG,KAAK,aAkCL,yCCoCDkQ,G,OA1FG,WACd,IAAM1N,EAAWpE,mBACXoS,EAAQpS,mBACR+R,EAAW/R,mBACXqS,EAAgBrS,mBAChByB,EAAUuQ,cAEVrO,EAAW,uCAAG,WAAOvD,GAAP,eAAA7B,EAAA,yDAChBkF,QAAQC,IAAI,QACZtD,EAAEgR,iBACEiB,EAAchS,QAAQpC,QAAU8T,EAAS1R,QAAQpC,MAHrC,gBAIZoU,EAAchS,QAAQiS,kBAAkB,0BAJ5B,8BAMNzV,EAAO,CACTuH,SAAUA,EAAS/D,QAAQpC,MAC3BmU,MAAOA,EAAM/R,QAAQpC,MACrB8T,SAAUA,EAAS1R,QAAQpC,OATnB,mBAYFO,IAAMC,KAAKP,EAAOE,IAAM,iBAAkBvB,GAAMiG,MAAK,SAACpE,GACxD+C,EAAQG,KAAK,aAbT,0DAgBR6B,QAAQC,IAAR,MAhBQ,KAiBA,KAAI3E,SAASC,OAjBb,OAkBC,MAlBD,QAqBC,MArBD,gCAmBAC,MAAM,KAAIF,SAASJ,MAnBnB,oCAsBA8E,QAAQC,IAAR,MAtBA,mHAAH,sDAkCjB,OACI,uBAAMM,GAAG,YAAYiO,SAAUtO,EAA/B,UACI,oBAAIK,GAAG,cAAP,+BACA,sBAAK3E,UAAU,MAAf,UACI,6CACA,uBACIsS,YAAY,WACZO,UAAQ,EACR1R,IAAK4D,OAEb,sBAAK/E,UAAU,MAAf,UACI,0CACA,uBACIsS,YAAY,QACZO,UAAQ,EACR1R,IAAK4R,EACLxV,KAAK,aAEb,sBAAKyC,UAAU,MAAf,UACI,6CACA,uBACIsS,YAAY,WACZO,UAAQ,EACR1R,IAAKuR,EACLnV,KAAK,WACLuV,UAAU,SAElB,sBAAK9S,UAAU,MAAf,UACI,mDACA,uBACIsS,YAAY,iBACZO,UAAQ,EACR1R,IAAK6R,EACLzV,KAAK,gBAEb,qBAAKoH,GAAG,SAAS3E,UAAU,MAA3B,SACI,wBAAQzC,KAAK,SAAb,uBAIJ,qBAAKoH,GAAG,SAAS3E,UAAU,MAA3B,SACI,wBAAQA,UAAU,sBAAsBoB,QA7CtC,WACVgB,EAAQG,KAAK,UA4CL,qCC7DD2Q,G,OAtBC,SAAC,GAAqB,IAAnBhR,EAAkB,EAAlBA,YACTE,EAAUzB,iBAAOuB,GACjBC,EAAcxB,iBAAO,KACnBpC,EAAaoR,qBAAWzR,GAAxBK,SAYR,OAVAC,qBAAU,WACOe,OAAO4T,QAAQ,oCAExBrT,EAAWvB,IAGX6D,EAAQpB,QAAQuB,KAAK,KACrBJ,EAAYnB,QAAU,OAE3B,IAEC,0BC0BOoS,G,OA9CG,WAEd,OACI,qBAAKpT,UAAU,oCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,8CAAgB,iDAChB,wBAAQ4F,MAAM,MAAMC,OAAO,MAAMjB,IAAI,4CAA4CvD,MAAM,uBAAuBgS,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,IAC9O,wCACA,6GACA,6CACA,+BACI,wFACA,kGACA,uFACA,0HAEJ,uCACA,kYAGA,2CACA,sRACA,2CACA,q4BAGA,qCACA,oOACA,uCACA,+BACI,2JACA,0HACA,kLACA,2OClBjBC,G,OAlBD,WACV,OACI,qBAAKxT,UAAU,qCAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,wCAAU,+CACV,oEACA,mBAAGA,UAAU,iBAAb,+DACA,gHCuDbyT,EAhDH,WACV,IAAMrR,EAAUuQ,cACRnV,EAASmS,qBAAWzR,GAApBV,KACAe,EAAaoR,qBAAWzR,GAAxBK,SAiBR,OAhBAC,oBAAS,sBAAC,sBAAAU,EAAA,0DACJ1B,EADI,gCAEA2B,IAAMqE,IAAI3E,EAAOE,IAAP,mBAAiC,CAC/C2U,QAAS,CACP,iBAAkB1V,aAAaC,QAAQ,YAExCwF,MAAK,SAAC/D,IACoB,IAAvBA,EAASJ,KAAKqU,OAChB/T,MAAM,yBACNE,EAAWvB,OAEZ2F,OAAM,SAACC,GACRC,QAAQC,IAAIF,MAZR,2CAeP,IAED,qCACE,cAAC,EAAD,CAAQjC,YAAaE,EAASH,SAAUzE,IACxC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoW,OAAK,EAACC,KAAK,IAAlB,SACGrW,EAAO,cAAC,EAAD,IAAW,cAAC,EAAD,MAErB,cAAC,IAAD,CAAOqW,KAAK,WAAZ,SACGrW,EAAO,cAAC,EAAD,CAAS0E,YAAaE,IAAc,cAAC,IAAD,CAAUR,GAAG,mBAE3D,cAAC,IAAD,CAAOiS,KAAK,SAAZ,SACGrW,EAAO,cAAC,IAAD,CAAUoE,GAAG,iBAAoB,cAAC,EAAD,MAE3C,cAAC,IAAD,CAAOiS,KAAK,YAAZ,SACGrW,EAAO,cAAC,IAAD,CAAUoE,GAAG,MAAS,cAAC,EAAD,MAEhC,cAAC,IAAD,CAAOiS,KAAK,eAAZ,SACGrW,EAAO,cAAC,EAAD,IAAoB,cAAC,IAAD,CAAUoE,GAAG,aAE3C,cAAC,IAAD,CAAOiS,KAAK,cAAZ,SACGrW,EAAO,cAAC,EAAD,IAAoB,cAAC,IAAD,CAAUoE,GAAG,aAE3C,cAAC,IAAD,CAAOiS,KAAK,aAAaC,UAAWV,IACpC,cAAC,IAAD,CAAOS,KAAK,SAASC,UAAWN,WCtDxCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAIN1P,SAASC,eAAe,U","file":"static/js/main.8e91bb1f.chunk.js","sourcesContent":["const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        token: null,\n        isFetching: true,\n        error: false,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        token: action.payload.token,\n        isFetching: false,\n        error: false,\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        token: null,\n        isFetching: false,\n        error: true,\n      };\n    case \"LOGOUT\":\n      return {\n        user: null,\n        token: null,\n        isFetching: false,\n        error: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;\n","import { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\nconst INITIAL_STATE = {\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  token: localStorage.getItem(\"token\") || null,\n  isFetching: false,\n  error: false,\n};\n\n\nexport const AuthContext = createContext(INITIAL_STATE);\n\nexport const AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user))\n  }, [state.user])\n\n  useEffect(() => {\n    localStorage.setItem(\"token\", state.token)\n  }, [state.token])\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        token: state.token,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","const config = { socket: \"https://apiservergalfinger.azurewebsites.net\", url: `https://apiservergalfinger.azurewebsites.net/api` }\r\n\r\nexport default config","import axios from \"axios\";\nimport config from '../src/config';\n\nexport const loginCall = async (userCredential, dispatch) => {\n  dispatch({ type: \"LOGIN_START\" });\n  try {\n    const res = await axios.post(config.url + \"/auth/login\", userCredential);\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\n    window.location.reload();\n  } catch (err) {\n    switch (err.response.status) {\n      case 400:\n        alert(err.response.data.message)\n        break;\n      case 404:\n        alert(err.response.data.message)\n        break;\n      default:\n        alert(err)//problem with the server\n        break;\n    }\n    dispatch({ type: \"LOGIN_FAILURE\", payload: err });\n  }\n};\n\nexport const logoutCall = async (dispatch) => {\n  dispatch({ type: \"LOGOUT\" });\n  window.location.reload();\n};\n\n\n","import \"./Home.css\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <h1 className=\"title\">Welcome to chat app!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import './Line.css';\r\n\r\nconst Line = (props) => {\r\n    return (\r\n        <div data-testid=\"LineDiv\" className={`Line ${props.className}`} justify={props.justify}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line;","const Icon = (props) => {\r\n    return (\r\n        <div data-testid=\"IconDiv\" className=\"Icon\">\r\n            <i data-testid=\"IconImageDiv\" className={`${props.i ? `fas fa-${props.i}` : \"\"}`}></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Icon;","import { useEffect, useState, useRef } from 'react';\r\n\r\nimport { Line, Icon } from 'UIKit';\r\nimport './Menu.css';\r\n\r\nconst Menu = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const dropdownContainer = useRef();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', onCloseIsOpen);\r\n        return () => {\r\n            window.removeEventListener('click', onCloseIsOpen);\r\n        }\r\n    }, [])\r\n\r\n    const handleHeaderClick = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n    const handleItemClick = (item) => {\r\n        if (props.onChange) {\r\n            props.onChange(item);\r\n            if (item.props.to) {\r\n                onCloseIsOpen();\r\n            }\r\n        }\r\n    }\r\n\r\n    const onCloseIsOpen = (e) => {\r\n        if (dropdownContainer?.current?.contains(e?.target)) {\r\n\r\n        } else {\r\n            setIsOpen(false);\r\n        }\r\n    }\r\n    const renderList = () => {\r\n        if (isOpen && props.children) {\r\n            return (\r\n                <div data-testid=\"menuList\" className=\"list\">\r\n                    {props.children ? props.children.map(item => <div className={item.props.enabled === false ? \"disabled\" : \"\"} key={item.key} onClick={item.props.enabled !== false ? () => { handleItemClick(item) } : null}>{item}</div>) : \"aaaaa\"}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div data-testid=\"menuDiv\" className={`menu ${props.className}`} ref={dropdownContainer}>\r\n            <div data-testid=\"menuHeaderDiv\" className=\"header\" onClick={handleHeaderClick}>\r\n                <Line>\r\n                    <span data-testid=\"menuTitleSpan\" className=\"logo\">{props.title ? props.title : \"\"}</span>\r\n                    <Icon i={isOpen ? props.open : props.close} />\r\n                </Line>\r\n            </div>\r\n            {renderList()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import \"./topbar.css\";\nimport { Person, Chat } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Line } from 'UIKit';\nimport { useRef } from 'react';\n\nconst Topbar = ({ initUser, initHistory }) => {\n  const currentRout = useRef(\"/\");\n  const user = useRef(initUser);\n  const history = useRef(initHistory);\n\n  const changeHistory = (toValue) => {\n    history.current.push(toValue);\n    currentRout.current = toValue;\n  };\n\n  const handleOnChange = (item) => {\n    if (item.props.className) {\n      changeHistory(item.props.to);\n    }\n  }\n\n  return (\n    <div data-testid=\"topbarContainer\" className=\"topbarContainer\">\n      <div data-testid=\"topbarLeft\" className=\"topbarLeft\">\n        <Line justify=\"between\">\n          <Line>\n            <Menu title=\"Sela TalkBack\" open=\"chevron-up\" close=\"chevron-down\" onChange={handleOnChange}>\n              <Line enabled={user.current ? true : false} to=\"/\" key=\"1\" className=\"submenu\" >\n                Home\n              </Line>\n              <Line to={user.current ? \"/signOut\" : \"/login\"} key=\"2\" className=\"submenu\" >\n                {user.current ? \"Sign Out\" : <span className=\"topbarLink\">Log in</span>}\n              </Line>\n              <Line key=\"3\" className=\"submenu\" >\n                Actions\n                <Menu className=\"menu2\" open=\"chevron-left\" close=\"chevron-right\" onChange={handleOnChange} >\n                  <Line enabled={user.current ? true : false} to=\"SendMessage\" key=\"1\" className=\"submenu\" >Send Message</Line>\n                  <Line enabled={user.current ? true : false} to=\"Backgammon\" key=\"2\" className=\"submenu\" >Play Backgammon</Line>\n                </Menu>\n              </Line>\n              <Line key=\"4\" className=\"submenu\">\n                Help\n                <Menu className=\"menu2\" open=\"chevron-left\" close=\"chevron-right\" onChange={handleOnChange} >\n                  <Line to=\"HowToPlay\" key=\"1\" className=\"submenu\" >How To Play</Line>\n                  <Line to=\"About\" key=\"2\" className=\"submenu\" >About</Line>\n                </Menu>\n              </Line>\n            </Menu>\n          </Line>\n          <Line>\n          </Line>\n        </Line>\n      </div>\n      <div data-testid=\"topbarRight\" className=\"topbarRight\">\n        <div data-testid=\"topbarLinks\" className=\"topbarLinks\">\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <span className=\"topbarLink\">Homepage</span>\n          </Link>\n        </div>\n        <div data-testid=\"topbarIcons\" className=\"topbarIcons\">\n          <div data-testid=\"topbarIconItem\" className=\"topbarIconItem\">\n            <Person />\n          </div>\n          <div data-testid=\"topbarIconItem\" className=\"topbarIconItem\">\n            <Link to=\"/sendMessage\" style={{ textDecoration: \"none\" }}>\n              <Chat />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Topbar;","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"../chatOnline/chatOnline.css\";\nimport config from '../../config';\n\nconst ChatOnline = ({ onlineUsers, currentId, onSelectedUser, initSelectedUser }) => {\n  const [online, setOnline] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(initSelectedUser);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  useEffect(async () => {\n    getOnlineUsers();\n  }, [currentId]);\n\n  //get all the users from the server and then return only the online users!\n  async function getOnlineUsers() {\n    await axios.get(config.url + \"/users/allUsers\").then((res) => {\n      let array = [];\n      for (let index = 0; index < onlineUsers.length; index++) {\n        const user = onlineUsers[index];\n        const onUser = res.data.find(u => u._id === user.userId && user.userId !== currentId);\n        if (onUser) {\n          array.push(onUser);\n        }\n      }\n      setOnline(array);\n    }).catch((err) => {\n      console.log(err);//problem with the server\n    });\n  }\n\n  //when the socket online users array chang, we update the online array\n  useEffect(async () => {\n    if (onlineUsers.length !== 0) {\n      getOnlineUsers();\n    }\n  }, [onlineUsers]);\n\n  //change the background color of the online user that selected\n  const handleClick = async (user) => {\n    var optionElement\n    if (selectedUser != null) {\n      optionElement = document.getElementById(selectedUser._id);\n      optionElement.style.background = 'none';\n    }\n    optionElement = document.getElementById(user._id);\n    optionElement.style.background = 'limegreen';\n    setSelectedUser(user);\n    onSelectedUser(user);//update the selected user to the parent component - contactScreen\n  };\n\n  return (\n    <>\n      <div className=\"chatOnline\">\n        <div className=\"textOnline\">\n          {online.length > 0 ? \"Online Users\" : \"No Online Users Right Now\"}\n        </div>\n        {online.map((o) => (\n          <div id={o?._id} key={o?._id} className=\"chatOnlineFriend\" onClick={() => handleClick(o)}>\n            <div className=\"chatOnlineImgContainer\">\n              <img\n                className=\"chatOnlineImg\"\n                src={\n                  o?.profilePicture\n                    ? PF + o.profilePicture\n                    : PF + \"person/noAvatar.png\"\n                }\n                alt=\"\" />\n              <div className=\"chatOnlineBadge\"></div>\n            </div>\n            <span className=\"chatOnlineName\">{o?.username}</span>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nexport default ChatOnline","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"../chatOffline/chatOffline.css\";\nimport config from '../../config';\n\nconst ChatOffline = ({ onlineUsers, currentId }) => {\n  const [users, setUsers] = useState([]);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  async function getUsers() {\n    await axios.get(config.url + \"/users/allUsers\").then((res) => {\n      let array = [];\n      for (let index = 0; index < res.data.length; index++) {\n        const user = res.data[index];\n        const onUser = onlineUsers.find(u => u.userId === user._id);\n        if (!onUser && user._id !== currentId) {\n          array.push(user);\n        }\n      }\n      setUsers(array);\n    }).catch((err) => {\n      console.log(err);//problem with the server\n    });\n  }\n\n  useEffect(async () => {\n    getUsers();\n  }, [currentId]);\n\n  useEffect(async () => {\n    if (onlineUsers.length !== 0) {\n      getUsers();\n    }\n  }, [onlineUsers]);\n\n  return (\n    <>\n      <div className=\"chatOffline\">\n        <div className=\"textOffline\">\n          Offline Users\n        </div>\n        {users.map((o) => (\n          <div key={o?._id} className=\"chatOfflineFriend\">\n            <div className=\"chatOfflineImgContainer\">\n              <img\n                className=\"chatOfflineImg\"\n                src={\n                  o?.profilePicture\n                    ? PF + o.profilePicture\n                    : PF + \"person/noAvatar.png\"\n                }\n                alt=\"\" />\n              <div className=\"chatOfflineBadgeGrey\"></div>\n            </div>\n            <span className=\"chatOfflineName\">{o?.username}</span>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nexport default ChatOffline","import \"./message.css\";\nimport { format } from \"timeago.js\";\nimport { forwardRef } from \"react\";\n\nconst Message = forwardRef((props, ref) => {\n  return (\n    <div data-testid=\"messageDiv\" ref={ref} className={props.own ? \"message sent\" : \"message received\"}>\n      {props.message.text}\n      <span data-testid=\"metadataSpan\" className=\"metadata\">\n        <span data-testid=\"timeMessageSpan\" className=\"time\">\n          {format(props.message.createdAt)}\n        </span>\n        <span data-testid=\"tickSpan\" className=\"tick\">\n          {props.own && props.seen ? <svg data-testid=\"blueTick\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#4fc3f7\" />\n          </svg> : props.own ? <svg data-testid=\"greyTick\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"15\" id=\"msg-dblcheck-ack\" x=\"2063\" y=\"2076\"><path d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.88a.32.32 0 0 1-.484.032l-.358-.325a.32.32 0 0 0-.484.032l-.378.48a.418.418 0 0 0 .036.54l1.32 1.267a.32.32 0 0 0 .484-.034l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.88a.32.32 0 0 1-.484.032L1.892 7.77a.366.366 0 0 0-.516.005l-.423.433a.364.364 0 0 0 .006.514l3.255 3.185a.32.32 0 0 0 .484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\" fill=\"#aeb9a5\" />\n          </svg> : \"\"}\n        </span>\n      </span>\n    </div>\n  );\n})\n\nexport default Message","import './Piece.css';\r\n\r\nconst Piece = (props) => {\r\n\r\n    const handleClick = (props) => {\r\n        props.onClick(props);\r\n    };\r\n\r\n    return (\r\n        <div data-testid=\"divPiece\" key={props.pieceKey ? props.pieceKey : \"\"}\r\n            onClick={props.onClick ? () => handleClick(props) : null}\r\n            className={`Piece ${props.className ? props.className : \"\"}`} >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Piece;","import React, { useState, useEffect } from 'react';\r\nimport \"../Timer/Timer.css\";\r\n\r\nconst Timer = ({ reachLimit, timeLimit }) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        interval = setInterval(() => {\r\n            if (seconds > timeLimit - 1) {\r\n                reachLimit();\r\n            }\r\n            setSeconds(seconds => seconds + 1);\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, [seconds]);\r\n\r\n    return (\r\n        <div data-testid=\"TimerDiv\" className=\"app\">\r\n            <div data-testid=\"TimerTimeDiv\" className=\"timerTime\">\r\n                {seconds}s / {timeLimit}s\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;","import './Triangle.css';\r\n\r\nconst Triangle = (props) => {\r\n    const handleClick = (props) => {\r\n        props.onClick(props);\r\n    };\r\n    return (\r\n        <div data-testid=\"triangleDiv\" onClick={props.onClick ? () => handleClick(props) : null} className={`${props.className}`} >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Triangle;","import \"../Backgammon/Backgammon.css\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Piece from \"../Piece/Piece\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport Triangle from '../Triangle/Triangle';\r\n\r\nconst Backgammon = ({ propsBoard, currentBoard, userPlayId, initSocket, EndGame }) => {\r\n    const PF = process.env.PUBLIC_URL;\r\n    const socket = useRef(initSocket);\r\n\r\n    const [points, setPoints] = useState([]);\r\n    const [arrivalPoints, setArrivalPoints] = useState(null);\r\n    const [nextTurn, setNextTurn] = useState(null);\r\n    const [winStatus, setWinStatus] = useState(null);\r\n    const [rolling, setRolling] = useState(false);\r\n    const [dieOneValue, setDieOneValue] = useState(null);\r\n    const [dieTwoValue, setDieTwoValue] = useState(null);\r\n    const [dices, setDices] = useState([]);\r\n    const [middleBar, setMiddleBar] = useState(null);\r\n    const [p1IsNext, setP1IsNext] = useState(null);\r\n    const [outSideBar, setOutSideBar] = useState(null);\r\n    const [userPlay, setUserPlay] = useState(null);\r\n    const [userAgainst, setUserAgainst] = useState(null);\r\n    const [currentUserPlay, setCurrentUserPlay] = useState(null);\r\n    const [selectedPiece, setSelectedPiece] = useState(null);\r\n\r\n    const roll = () => {\r\n        async function promiseFunc() {\r\n            return new Promise(res => {\r\n                let cubes = document.getElementsByClassName(\"dice\");\r\n                for (let index = 0; index < cubes.length; index++) {\r\n                    const cube = cubes[index];\r\n                    cube.classList.add(\"shake\");\r\n                }\r\n                setTimeout(() => {\r\n                    for (let index = 0; index < cubes.length; index++) {\r\n                        const cube = cubes[index];\r\n                        cube.classList.remove(\"shake\");\r\n                    }\r\n                }, 300);\r\n                let dieOne = Math.floor(Math.random() * 6) + 1;\r\n                let dieTwo = Math.floor(Math.random() * 6) + 1;\r\n                setDieOneValue(dieOne);\r\n                setDieTwoValue(dieTwo);\r\n                if (dieOne === dieTwo) {//double\r\n                    res([dieOne, dieOne, dieOne, dieOne])\r\n                }\r\n                else {\r\n                    res([dieOne, dieTwo])\r\n                }\r\n            })\r\n        }\r\n\r\n        promiseFunc().then(dice => {\r\n            setDices(dice);\r\n            getPointsWithoutActions(points).then(pointsNoAction => {\r\n                setRolling(!rolling)\r\n                let allPoints = CalculateAllMoves(pointsNoAction, dice, p1IsNext, middleBar).points;\r\n                //check if there are any optional ways to move on the board , if not he need to pass the turn \r\n                if (checkIfPlayerCanMove(allPoints) === false) {\r\n                    PassTurnToOtherUser();\r\n                    alert(\"You don't have any moves...\")\r\n                }\r\n                setPoints(allPoints);\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    //get all the points without the actions\r\n    async function getPointsWithoutActions() {\r\n        return new Promise(res => {\r\n            res(points.map((point) => {\r\n                return { player: point.player, checkers: point.checkers };\r\n            }))\r\n        })\r\n    }\r\n\r\n    //register to all the socket events and init game\r\n    useEffect(() => {\r\n        setUserPlay(userPlayId);\r\n        setPoints(propsBoard);\r\n        setMiddleBar({ checkersP1: 0, checkersP2: 0 })\r\n        setOutSideBar({ checkersP1: 0, checkersP2: 0 })\r\n        socket.current.on(\"getCurrentPoints\", (data) => {\r\n            setArrivalPoints({\r\n                sender: data.senderId,\r\n                currentPoints: data.currentPoints,\r\n                currentMiddleBar: data.currentMiddleBar,\r\n                currentOutsideBar: data.currentOutsideBar,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        socket.current.on(\"getNextTurn\", (data) => {\r\n            setNextTurn({\r\n                sender: data.senderId,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        socket.current.on(\"getWin\", (data) => {\r\n            setWinStatus({\r\n                sender: data.senderId,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        for (let index = 0; index < currentBoard.members.length; index++) {\r\n            const userId = currentBoard.members[index];\r\n            if (userPlayId !== userId) setUserAgainst(userId)\r\n        }\r\n        if (userPlayId === currentBoard.members[0]) {\r\n            setCurrentUserPlay(userPlayId);\r\n            setP1IsNext(true);//black player and start\r\n        }\r\n        else {\r\n            setP1IsNext(false);//white player\r\n        }\r\n    }, []);\r\n\r\n    //update the board after the other user send a event\r\n    useEffect(() => {\r\n        if (arrivalPoints !== null) {\r\n            setPoints(arrivalPoints.currentPoints)//setBoard\r\n            setMiddleBar(arrivalPoints.currentMiddleBar)//setMiddleBar\r\n            setOutSideBar(arrivalPoints.currentOutsideBar);//setOutsideBar\r\n        }\r\n    }, [arrivalPoints]);\r\n\r\n    //update the next turn after the other user send a event\r\n    useEffect(() => {\r\n        if (nextTurn !== null) {\r\n            setCurrentUserPlay(userPlay);\r\n            if (rolling === true) {\r\n                setRolling(!rolling);\r\n            }\r\n        }\r\n    }, [nextTurn]);\r\n\r\n    //update the win status after the other user send a event\r\n    useEffect(() => {\r\n        if (winStatus !== null) {\r\n            alert(\"Game over!!! \\n You lose...\");\r\n            EndGame();//reset board - parent component - contactScreen\r\n        }\r\n    }, [winStatus]);\r\n\r\n    //check if there ara any checkers that belong to the current player on the board, if not he win\r\n    const CheckCheckersOnBoard = (points) => {\r\n        let anyChecker = false;\r\n        //get points with actions\r\n        points.map((point) => {//Check homeBoard\r\n            //Player 1 // black\r\n            if (p1IsNext && point.player === \"black\"\r\n            ) {\r\n                anyChecker = true;\r\n            }\r\n            //Player 2 // white\r\n            else if (!p1IsNext && point.player === \"white\"\r\n            ) {\r\n                anyChecker = true;\r\n            }\r\n            return null;\r\n        });\r\n        return anyChecker;//if true - there is a checkers in the board that belong to the current player, if false he win - 0 checkers on the board \r\n    }\r\n\r\n    //get the current player\r\n    const getPlayer = (p1IsNext) => p1IsNext ? \"black\" : \"white\";\r\n\r\n    //send the other user that he lose the game...\r\n    const sendWinToUser = () => {\r\n        socket.current.emit(\"sendWin\", {\r\n            senderId: userPlay,\r\n            receiverId: userAgainst,\r\n        });\r\n        alert(\"Game over!!! \\n You win!!!\");\r\n        EndGame();//reset board - parent component - contactScreen\r\n    }\r\n    const TimeIsOver = () => {\r\n        getPointsWithoutActions(points).then(pointsNoAction => {\r\n            setSelectedPiece(null);\r\n            setPoints(pointsNoAction);\r\n            alert(\"Time is over!!!\")\r\n            PassTurnToOtherUser();\r\n        })\r\n    }\r\n    //calculate the all optionals move of the game\r\n    const CalculateAllMoves = (points, AllDices, p1IsNext, middleBar) => {\r\n        let newPoints = [...points];\r\n        if (!AllDices[0]) {\r\n            // No dice to play\r\n        }\r\n        else {\r\n            //check if there are a checkers that belong to the current player on the middleBar\r\n            if ((p1IsNext && middleBar.checkersP1 > 0) || (!p1IsNext && middleBar.checkersP2 > 0)) {\r\n                for (let die of AllDices) {\r\n                    const destination = p1IsNext ? die - 1 : 24 - die;\r\n                    if (points[destination].player === getPlayer(p1IsNext) || //point belongs to user\r\n                        points[destination].checkers < 2) { //point is empty or belongs to other user but with only one checker\r\n                        if (newPoints[destination].canReceive) {\r\n                            newPoints[destination].canReceive.push(destination);\r\n                        }\r\n                        else {\r\n                            newPoints[destination].canReceive = [destination];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //Check if player has all the checkers in the home board\r\n                const inHomeBoard = checkHomeBoard(points);\r\n                for (let index = 0; index < points.length; index++) {\r\n                    //Check if checker can move\r\n                    if (points[index] && (points[index].player === getPlayer(p1IsNext))) {\r\n                        for (let die of AllDices) {\r\n                            const destination = p1IsNext ? index + die : index - die;\r\n                            if (destination < 24 && destination >= 0) {\r\n                                if (points[destination].player === getPlayer(p1IsNext) ||\r\n                                    points[destination].checkers < 2) {\r\n                                    if (newPoints[index].canMove) {\r\n                                        newPoints[index].canMove.push(destination);\r\n                                    }\r\n                                    else {\r\n                                        newPoints[index].canMove = [destination];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //check if checker can bear off\r\n                    if (inHomeBoard && ((p1IsNext && index >= 18) || (!p1IsNext && index <= 5))) {\r\n                        let numDice = checkCanBearOff(points, index, AllDices);\r\n                        if (numDice) {\r\n                            newPoints[index].canBear = numDice;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { points: newPoints };\r\n    }\r\n\r\n    const checkIfPlayerCanMove = (newPoints) => {\r\n        let canMove = false;\r\n        //get points with actions\r\n        newPoints.map((point) => {//Check homeBoard\r\n            //Player 1 // black\r\n            if (point.canMove || point.canBear || point.canReceive) {\r\n                canMove = true;\r\n            }\r\n            return null;\r\n        });\r\n        return canMove;\r\n    }\r\n\r\n    const checkCanBearOff = (points, checker, dice) => {\r\n        let canBearOff = false;\r\n        //Check if it is a player checker\r\n        if (checker >= 0 && checker < 24 && points[checker].player === getPlayer(p1IsNext)) {\r\n            for (let die of dice) {\r\n                //check if the dice have the right number to bear off\r\n                if ((p1IsNext && (checker + die) === 24) || (!p1IsNext && (checker - die) === -1)) {\r\n                    canBearOff = die;\r\n                }\r\n            }\r\n            if (!canBearOff) {\r\n                const highDie = [...dice].sort().reverse()[0]; //Get the highest die\r\n                let checkerBehind = false;//Check if there is checker behind the moving checker\r\n                //die is more than necessary to bear off\r\n                if ((p1IsNext && (checker + highDie) > 24) || (!p1IsNext && (checker - highDie) < -1)) {\r\n                    if (p1IsNext) {\r\n                        for (let i = 18; i < checker; i++) {\r\n                            if (points[i].player && points[i].player === getPlayer(p1IsNext)) {\r\n                                checkerBehind = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 5; i > checker; i--) {\r\n                            if (points[i].player && points[i].player === getPlayer(p1IsNext)) {\r\n                                checkerBehind = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    //If there is no checker behind, it can bear off\r\n                    if (!checkerBehind) {\r\n                        canBearOff = highDie;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return canBearOff;\r\n    }\r\n\r\n    const checkHomeBoard = (points) => {\r\n        //Checkers in homeboard. If true it's good to go outside\r\n        let homeBoard = true;\r\n        //get points with actions\r\n        points.map((point, index) => {\r\n            //Check homeboard\r\n            //Player 1 // black\r\n            if (p1IsNext && index <= 17\r\n                && point.player === \"black\"\r\n            ) {\r\n                homeBoard = false;\r\n            }\r\n            //Player 2 // white\r\n            else if (!p1IsNext && index >= 6\r\n                && point.player === \"white\"\r\n            ) {\r\n                homeBoard = false;\r\n            }\r\n            return null;\r\n        });\r\n        return homeBoard;\r\n    }\r\n\r\n    //set selected piece\r\n    const handleClick = (piece) => {\r\n        setSelectedPiece(piece)\r\n    };\r\n\r\n    //remove the enemy piece to the middle bar\r\n    const removeEnemyToTheMiddleBar = (column) => {\r\n        if (p1IsNext) {\r\n            middleBar.checkersP2++\r\n        } else {\r\n            middleBar.checkersP1++\r\n        }\r\n        points[column].checkers = 0;\r\n        points[column].player = getPlayer(p1IsNext);\r\n    }\r\n\r\n    //start when the player click the optional triangle\r\n    const movePiece = (props) => {\r\n        let column = props.column;\r\n        //the current player have a checkers on middle bar\r\n        if ((p1IsNext && middleBar.checkersP1 > 0) ||\r\n            (!p1IsNext && middleBar.checkersP2 > 0)) {\r\n            if (points[column].player !== false && points[column].player !== getPlayer(p1IsNext) &&\r\n                points[column].checkers < 2) { //point is empty and belongs to other user but with only one checker\r\n                removeEnemyToTheMiddleBar(column);\r\n            }\r\n            else //point belongs to user or empty\r\n            {\r\n                if (points[column].player === false) {//point empty \r\n                    points[column].player = getPlayer(p1IsNext); // update the player that own the column\r\n                }\r\n            }\r\n            points[column].checkers += 1; // insert the new checker from middleBar\r\n            if (p1IsNext) { // remove the previous checker from middleBar\r\n                middleBar.checkersP1 -= 1;\r\n            } else {\r\n                middleBar.checkersP2 -= 1;\r\n            }\r\n            //find index of current dice in dices array and remove dice\r\n            const indexDice = dices.indexOf(p1IsNext ? column + 1 : 24 - column);\r\n            if (indexDice > -1) {\r\n                dices.splice(indexDice, 1);\r\n                setDices(dices)\r\n            }\r\n        }\r\n        else {//there is no middleBar checkers\r\n            //can bear the checker off the homeBoard\r\n            if (points[selectedPiece.column].canBear && column === undefined) {\r\n                points[selectedPiece.column].checkers -= 1;\r\n                if (points[selectedPiece.column].checkers === 0) {\r\n                    points[selectedPiece.column].player = false;\r\n                }\r\n                if (p1IsNext) outSideBar.checkersP1++\r\n                else outSideBar.checkersP2++\r\n                const indexDice = dices.indexOf(points[selectedPiece.column].canBear);\r\n                if (indexDice > -1) {\r\n                    dices.splice(indexDice, 1);\r\n                    setDices(dices)\r\n                }\r\n            }\r\n            else {//cant bear the checker off the homeBoard\r\n                //empty column\r\n                if (points[column].player === false) {\r\n                    points[column].player = selectedPiece.color\r\n                }\r\n                //can eat the enemy\r\n                if (points[column].checkers === 1 && points[column].player !== points[selectedPiece.column].player) {\r\n                    removeEnemyToTheMiddleBar(column);\r\n                }\r\n                //checker leave alone from the column\r\n                if (points[selectedPiece.column].checkers === 1) {\r\n                    points[selectedPiece.column].player = false;\r\n                }\r\n                //insert the new checker to the new column\r\n                points[column].checkers += 1;\r\n                //find index of current Move in canMove array\r\n                const index = points[selectedPiece.column].canMove.indexOf(column);\r\n                if (index > -1) {\r\n                    points[selectedPiece.column].canMove.splice(index, 1);\r\n                }\r\n                //find index of current dice in dices array and remove the dice\r\n                let dice = Math.abs(selectedPiece.column - column);\r\n                const indexDice = dices.indexOf(dice);\r\n                if (indexDice > -1) {\r\n                    dices.splice(indexDice, 1);\r\n                    setDices(dices)\r\n                }\r\n                //remove the checker from the clicked checker column\r\n                points[selectedPiece.column].checkers -= 1\r\n            }\r\n        }\r\n        setPoints(points => [...points]);\r\n        //finish turn\r\n        if (dices.length === 0) {\r\n            PassTurnToOtherUser();\r\n        }\r\n        //check player win!!!\r\n        if (CheckCheckersOnBoard(points) === false && ((p1IsNext && middleBar.checkersP1 === 0) ||\r\n            (!p1IsNext && middleBar.checkersP2 === 0))) {\r\n            //current player win\r\n            sendWinToUser();\r\n        }\r\n        else {//continue regular\r\n            getPointsWithoutActions(points).then(pointsNoAction => {\r\n                sendCurrentPointsToEnemy(pointsNoAction);\r\n                let allPoints = CalculateAllMoves(pointsNoAction, dices, p1IsNext, middleBar).points;\r\n                if (checkIfPlayerCanMove(allPoints) === false && dices.length !== 0) {\r\n                    PassTurnToOtherUser();\r\n                    alert(\"You don't have any moves...\")\r\n                }\r\n                setPoints(allPoints);\r\n                setPoints(allPoints);\r\n            })\r\n            setSelectedPiece(null);\r\n        }\r\n    };\r\n\r\n    //pass the turn to the other user\r\n    const PassTurnToOtherUser = () => {\r\n        setDices([]);\r\n        setCurrentUserPlay(userAgainst);\r\n        socket.current.emit(\"sendNextTurn\", {\r\n            senderId: userPlay,\r\n            receiverId: userAgainst,\r\n        });\r\n    }\r\n\r\n    //update the enemy about the current board (after all move )\r\n    const sendCurrentPointsToEnemy = (pointsNoAction) => {\r\n        socket.current.emit(\"sendCurrentPoints\", {\r\n            senderId: userPlay,\r\n            receiverId: userAgainst,\r\n            currentPoints: pointsNoAction,\r\n            currentMiddleBar: middleBar,\r\n            currentOutsideBar: outSideBar\r\n        });\r\n    }\r\n\r\n    //render the outSidebar (where the player put his checkers that finish the game)\r\n    const renderOutSideBar = (player, numberOfCheckers) => {\r\n        const items = [];\r\n        if (numberOfCheckers > 0) {\r\n            items.push(<Piece color={player} className={`outsideBar ` + player}></Piece>)\r\n            if (numberOfCheckers > 1) {\r\n                items.push(<div className={`${player === \"black\" ? \"whiteTextOutBar\" : \"blackTextOutBar\"}`}>{numberOfCheckers}</div>)\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    //render the middle bar where the checkers that was eaten present\r\n    const renderMiddleBar = (player, numberOfCheckers) => {\r\n        const items = [];\r\n        if (numberOfCheckers > 0) {\r\n            items.push(<Piece color={player} className={`${player === \"black\" ? \"middleBarBlack\" : \"middleBarWhite\"} ` + player}></Piece>)\r\n            if (numberOfCheckers > 1) {\r\n                items.push(<div className={`${player === \"black\" ? \"whiteText\" : \"blackText\"}`}>{numberOfCheckers}</div>)\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    //check if current triangle can receive a checker\r\n    const checkCanReceive = (numColumn) => {\r\n        if ((selectedPiece && points[selectedPiece?.column].canMove?.includes(numColumn)) || points[numColumn]?.canReceive) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //render all checkers on the board\r\n    const renderCheckers = (column, numColumn) => {\r\n        const items = [];\r\n        for (let index = 0; index < column.checkers; index++) {\r\n            let last = '';\r\n            //last and can move or can bear\r\n            if (((index >= 0 && index == column.checkers - 1) || index == 4) && (column.canMove || column.canBear)) {\r\n                last = \"Last\";\r\n            }\r\n            //checkers at columns 1 - 5\r\n            if (numColumn >= 0 && numColumn <= 5) {\r\n                //last and greater than 5 checkers\r\n                if (column.checkers > 5 && index == column.checkers - 1) {\r\n                    items.push(<div className={`${column.player === \"black\" ? \"whiteTextBottom\" : \"blackTextBottom\"} rightText${numColumn} `}>{column.checkers}</div>)\r\n                }\r\n                else if (index < 5) {\r\n                    items.push(<Piece pieceKey={`c${numColumn}i${index}`} color={column.player} column={numColumn} indexInColumn={index} onClick={last !== '' ? handleClick : \"\"} className={column.player + ` right${numColumn} ${last}` + ` bottom${index}`}></Piece>)\r\n                }\r\n            }\r\n            //checkers at columns 6 - 11\r\n            else if (numColumn >= 6 && numColumn <= 11) {\r\n                //last and greater than 5 checkers\r\n                if (column.checkers > 5 && index == column.checkers - 1) {\r\n                    items.push(<div className={`${column.player === \"black\" ? \"whiteTextBottom\" : \"blackTextBottom\"} leftText${11 - numColumn} `}>{column.checkers}</div>)\r\n                }\r\n                else if (index < 5) {\r\n                    items.push(<Piece pieceKey={`c${numColumn}i${index}`} color={column.player} column={numColumn} indexInColumn={index} onClick={last !== '' ? handleClick : \"\"} className={column.player + ` left${11 - numColumn} ${last}` + ` bottom${index}`}></Piece>)\r\n                }\r\n            }\r\n            //checkers at columns 12 - 17\r\n            else if (numColumn >= 12 && numColumn <= 17) {\r\n                //last and greater than 5 checkers\r\n                if (column.checkers > 5 && index == column.checkers - 1) {\r\n                    items.push(<div className={`${column.player === \"black\" ? \"whiteTextTop\" : \"blackTextTop\"} leftText${numColumn - 12}`}>{column.checkers}</div>)\r\n                }\r\n                else if (index < 5) {\r\n                    items.push(<Piece pieceKey={`c${numColumn}i${index}`} color={column.player} column={numColumn} indexInColumn={index} onClick={last !== '' ? handleClick : \"\"} className={column.player + ` left${numColumn - 12} ${last}` + ` top${index}`}></Piece>)\r\n                }\r\n            }\r\n            //checkers at columns 18 - 23\r\n            else if (numColumn >= 18 && numColumn <= 23) {\r\n                //last and greater than 5 checkers\r\n                if (column.checkers > 5 && index == column.checkers - 1) {\r\n                    items.push(<div className={`${column.player === \"black\" ? \"whiteTextTop\" : \"blackTextTop\"} rightText${23 - numColumn} `}>{column.checkers}</div>)\r\n                }\r\n                else if (index < 5) {\r\n                    items.push(<Piece pieceKey={`c${numColumn}i${index}`} color={column.player} column={numColumn} indexInColumn={index} onClick={last !== '' ? handleClick : \"\"} className={column.player + ` right${23 - numColumn} ${last}` + ` top${index}`}></Piece>)\r\n                }\r\n            }\r\n        }\r\n        return items;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topPage\">\r\n                {currentUserPlay === userPlay ? <Timer timeLimit={60} reachLimit={TimeIsOver}></Timer> : \"\"}\r\n                <div className=\"outSideBar\">\r\n                    <h1 className=\"currentTurn\">\r\n                        {`${currentUserPlay === userPlay ? \"Its your\" : \"Wait for your\"} turn!`}\r\n                    </h1>\r\n                    <img src={PF + `/Images/homeBoard.png`} />\r\n                    {outSideBar ? renderOutSideBar(\"white\", outSideBar.checkersP2) : \"\"}\r\n                    {outSideBar ? renderOutSideBar(\"black\", outSideBar.checkersP1) : \"\"}\r\n                    {selectedPiece && points[selectedPiece.column].canBear ?\r\n                        <button className=\"bearoffBtn\" onClick={movePiece} >\r\n                            Bear Off\r\n                        </button> : \"\"}\r\n                </div>\r\n            </div>\r\n            <div className=\"board\">\r\n                {userPlay === currentUserPlay ? <div id=\"wrapper\">\r\n                    <img className=\"dice\" src={dices.length ? PF + `/Images/${dieOneValue}.png` : \"\"} />\r\n                    <img className=\"dice\" src={dices.length ? PF + `/Images/${dieTwoValue}.png` : \"\"} />\r\n                    {rolling === false ? <button className=\"btnRoll\" onClick={roll}>ROLL</button> : \"\"}\r\n                </div> : \"\"}\r\n                <div className=\"left-bin\">\r\n                    <div className=\"top-row\">\r\n                        <Triangle column={12} onClick={checkCanReceive(12) ? movePiece : () => \"\"}\r\n                            className={`arrow-down odd ${checkCanReceive(12) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={13} onClick={checkCanReceive(13) ? movePiece : () => \"\"}\r\n                            className={`arrow-down even ${checkCanReceive(13) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={14} onClick={checkCanReceive(14) ? movePiece : () => \"\"}\r\n                            className={`arrow-down odd ${checkCanReceive(14) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={15} onClick={checkCanReceive(15) ? movePiece : () => \"\"}\r\n                            className={`arrow-down even ${checkCanReceive(15) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={16} onClick={checkCanReceive(16) ? movePiece : () => \"\"}\r\n                            className={`arrow-down odd ${checkCanReceive(16) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={17} onClick={checkCanReceive(17) ? movePiece : () => \"\"}\r\n                            className={`arrow-down even ${checkCanReceive(17) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                    </div>\r\n                    <div className=\"bottom-row\">\r\n                        <Triangle column={11} onClick={checkCanReceive(11) ? movePiece : () => \"\"}\r\n                            className={`arrow-up odd ${checkCanReceive(11) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={10} onClick={checkCanReceive(10) ? movePiece : () => \"\"}\r\n                            className={`arrow-up even ${checkCanReceive(10) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={9} onClick={checkCanReceive(9) ? movePiece : () => \"\"}\r\n                            className={`arrow-up odd ${checkCanReceive(9) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={8} onClick={checkCanReceive(8) ? movePiece : () => \"\"}\r\n                            className={`arrow-up even ${checkCanReceive(8) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={7} onClick={checkCanReceive(7) ? movePiece : () => \"\"}\r\n                            className={`arrow-up odd ${checkCanReceive(7) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={6} onClick={checkCanReceive(6) ? movePiece : () => \"\"}\r\n                            className={`arrow-up even ${checkCanReceive(6) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                    </div>\r\n                </div>\r\n                <div className=\"middle-bar\">\r\n                </div>\r\n                <div className=\"right-bin\">\r\n                    <div className=\"top-row\">\r\n                        <Triangle column={18} onClick={checkCanReceive(18) ? movePiece : () => \"\"}\r\n                            className={`arrow-down odd ${checkCanReceive(18) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={19} onClick={checkCanReceive(19) ? movePiece : () => \"\"}\r\n                            className={`arrow-down even ${checkCanReceive(19) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={20} onClick={checkCanReceive(20) ? movePiece : () => \"\"}\r\n                            className={`arrow-down odd ${checkCanReceive(20) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={21} onClick={checkCanReceive(21) ? movePiece : () => \"\"}\r\n                            className={`arrow-down even ${checkCanReceive(21) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={22} onClick={checkCanReceive(22) ? movePiece : () => \"\"}\r\n                            className={`arrow-down odd ${checkCanReceive(22) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={23} onClick={checkCanReceive(23) ? movePiece : () => \"\"}\r\n                            className={`arrow-down even ${checkCanReceive(23) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                    </div>\r\n                    <div className=\"bottom-row\">\r\n                        <Triangle column={5} onClick={checkCanReceive(5) ? movePiece : () => \"\"}\r\n                            className={`arrow-up odd ${checkCanReceive(5) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={4} onClick={checkCanReceive(4) ? movePiece : () => \"\"}\r\n                            className={`arrow-up even ${checkCanReceive(4) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={3} onClick={checkCanReceive(3) ? movePiece : () => \"\"}\r\n                            className={`arrow-up odd ${checkCanReceive(3) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={2} onClick={checkCanReceive(2) ? movePiece : () => \"\"}\r\n                            className={`arrow-up even ${checkCanReceive(2) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={1} onClick={checkCanReceive(1) ? movePiece : () => \"\"}\r\n                            className={`arrow-up odd ${checkCanReceive(1) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                        <Triangle column={0} onClick={checkCanReceive(0) ? movePiece : () => \"\"}\r\n                            className={`arrow-up even ${checkCanReceive(0) ? \"triangle\" : \"\"}`}>\r\n                        </Triangle>\r\n                    </div>\r\n                </div>\r\n                {points.map((column, numColumn) => (\r\n                    <>\r\n                        {renderCheckers(column, numColumn)}\r\n                    </>\r\n                ))\r\n                }\r\n                <>\r\n                    {middleBar ? renderMiddleBar(\"white\", middleBar.checkersP2) : \"\"}\r\n                    {middleBar ? renderMiddleBar(\"black\", middleBar.checkersP1) : \"\"}\r\n                </>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Backgammon","import './User.css';\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from '../../config';\r\n\r\nconst User = ({ userId, sender, typing }) => {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    const [name, setName] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        await axios.get(config.url + `/users/`, { params: { userId: userId } }).then((res) => {\r\n            setName(res.data.username)\r\n        }).catch((err) => {\r\n            console.log(err);//user not found\r\n        });\r\n    }, []);\r\n    return (\r\n        <div data-testid=\"user-bar\" className=\"user-bar\">\r\n            <div data-testid=\"avatar\" className=\"avatar\">\r\n                <img\r\n                    src={\r\n                        sender?.profilePicture\r\n                            ? PF + sender.profilePicture\r\n                            : PF + \"person/noAvatar.png\"\r\n                    }\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n            <div data-testid=\"username\" className=\"name\">\r\n                <span data-testid=\"spanUserName\">\r\n                    {name}\r\n                </span>\r\n                {typing ? <span data-testid=\"typingSpan\" className=\"status\">typing...</span> : \"\"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import \"../ContactScreen/ContactScreen.css\";\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { Picker } from 'emoji-mart'\r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\r\nimport ChatOffline from \"../../components/chatOffline/chatOffline\";\r\nimport Message from \"../../components/message/Message\";\r\nimport Backgammon from \"../../components/Backgammon/Backgammon\";\r\nimport User from \"../../components/User/User\";\r\nimport config from '../../config';\r\nconst Points = Array(24).fill({ player: false, checkers: 0 });\r\n\r\nconst ContactsScreen = () => {\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [emojiPicker, SetEmojiPicker] = useState(false);\r\n    const [currentBoard, setCurrentBoard] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalGameRequest, setArrivalGameRequest] = useState(null);\r\n    const [sendSeen, setSendSeen] = useState(null);\r\n    const [typing, setTyping] = useState(null);\r\n    const [approveGameRequest, setApproveGameRequest] = useState(null);\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const socket = useRef();\r\n    const scrollRef = useRef();\r\n    const { user } = useContext(AuthContext);\r\n\r\n    //set selected user from the child component - chatOnline\r\n    const handleSelectedUser = (user) => {\r\n        setSelectedUser(user);\r\n    }\r\n\r\n    //when the user click the backgammon button he send a request to the other player to play\r\n    const StartGameClick = async () => {\r\n        socket.current.emit(\"sendGameRequest\", {\r\n            senderId: user._id,\r\n            receiverId: selectedUser._id\r\n        });\r\n    }\r\n\r\n    //open a conversation with the selected user\r\n    const StartChatClick = async () => {\r\n        await axios.get(config.url + `/conversations/find/${user._id}/${selectedUser._id}`).then((res) => {\r\n            setCurrentChat(res.data);\r\n        }).catch(async (err) => {\r\n            if (err.response.status === 404) {\r\n                await axios.post(config.url + `/conversations`, { senderId: user._id, receiverId: selectedUser._id }).then((newRes) => {\r\n                    setCurrentChat(newRes.data);\r\n                }).catch((err) => {\r\n                    console.log(err);//problem with the server\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.current = io(config.socket);\r\n        socket.current.on(\"getMessage\", (data) => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                messageId: data.messageId,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        socket.current.on(\"getGameRequest\", (data) => {\r\n            setArrivalGameRequest({\r\n                sender: data.senderId,\r\n                currentBoard: data.currentBoard,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        socket.current.on(\"approveGameRequest\", (data) => {\r\n            setApproveGameRequest({\r\n                sender: data.senderId,\r\n                currentBoard: data.currentBoard,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        socket.current.on(\"getSeen\", (data) => {\r\n            setSendSeen({\r\n                sender: data.senderId,\r\n                conversation: data.conversation,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        socket.current.on(\"getTyping\", (data) => {\r\n            setTyping({\r\n                sender: data.senderId,\r\n                typing: data.typing,\r\n                createdAt: Date.now(),\r\n            });\r\n        });\r\n        //draw a board \r\n        function drawBoard() {\r\n            // //set points\r\n            // Points[0] = { player: \"black\", checkers: 2 };\r\n            // Points[11] = { player: \"black\", checkers: 5 };\r\n            // Points[16] = { player: \"black\", checkers: 3 };\r\n            Points[18] = { player: \"black\", checkers: 5 };\r\n            // Points[23] = { player: \"white\", checkers: 2 };\r\n            // Points[12] = { player: \"white\", checkers: 5 };\r\n            // Points[7] = { player: \"white\", checkers: 3 };\r\n            Points[5] = { player: \"white\", checkers: 5 };\r\n        };\r\n        drawBoard();\r\n    }, []);\r\n\r\n    //reset the current board \r\n    const ResetBackgammon = () => {\r\n        setCurrentBoard(null);\r\n        setSelectedUser(null);\r\n    }\r\n    //send respond to the user if approve the request to play together\r\n    useEffect(() => {\r\n        if (approveGameRequest != null) {\r\n            if (approveGameRequest.currentBoard != null) {\r\n                setCurrentBoard(approveGameRequest.currentBoard);\r\n                setCurrentChat(null);\r\n                setSelectedUser(null);\r\n            }\r\n            else {\r\n                alert(\"its seems that he don't want to chat with you...\");\r\n            }\r\n        }\r\n    }, [approveGameRequest]);\r\n\r\n    //pop up a message to the screen and ask the user for question, if not answer after the timeout the message will disappear\r\n    function myConfirm(msg, timeout) {\r\n        const inputs = [...document.querySelectorAll(\"input, textarea, select\")].filter(input => !input.disabled);\r\n        const modal = document.getElementById(\"modal\");\r\n        const elements = modal.children[0].children;\r\n        function toggleModal(isModal) {\r\n            for (const input of inputs) input.disabled = isModal;\r\n            modal.style.display = isModal ? \"block\" : \"none\";\r\n            elements[0].textContent = isModal ? msg : \"\";\r\n        }\r\n        return new Promise((resolve) => {\r\n            toggleModal(true);\r\n            elements[1].onclick = () => resolve(true);\r\n            elements[2].onclick = () => resolve(false);\r\n            setTimeout(resolve, timeout);\r\n        }).then(result => {\r\n            toggleModal(false);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    //arrive request from user to play backgammon\r\n    useEffect(() => {\r\n        if (arrivalGameRequest != null) {\r\n            async function refreshToken() {\r\n                await axios.get(config.url + `/users/`, { params: { userId: arrivalGameRequest.sender } }).then((res) => {\r\n                    var r = myConfirm(`You Have a new Game Request from ${res.data.username}...`, 5000);\r\n                    return r.then(async ok => {\r\n                        if (ok) {\r\n                            await axios.post(config.url + `/board`, { senderId: user._id, receiverId: arrivalGameRequest.sender, currentBoard: Points }).then((newBoard) => {\r\n                                setCurrentBoard(newBoard.data);\r\n                                setCurrentChat(null);\r\n                                setSelectedUser(null);\r\n                                socket.current.emit(\"sendGameApproveRequest\", {\r\n                                    senderId: user._id,\r\n                                    receiverId: arrivalGameRequest.sender,\r\n                                    currentBoard: newBoard.data,\r\n                                });\r\n                            }).catch((err) => {\r\n                                console.log(err);//problem with the server\r\n                            });\r\n                        } else {\r\n                            socket.current.emit(\"sendGameApproveRequest\", {\r\n                                senderId: user._id,\r\n                                receiverId: arrivalGameRequest.sender,\r\n                                currentBoard: null,\r\n                            });\r\n                        }\r\n                        return ok;\r\n                    });\r\n                }).catch((err) => {\r\n                    console.log(err);//user not found\r\n                });\r\n            }\r\n            refreshToken();\r\n        }\r\n    }, [arrivalGameRequest]);\r\n\r\n    //user connected\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", user._id);\r\n        socket.current.on(\"getUsers\", (users) => {\r\n            setOnlineUsers(\r\n                users\r\n            );\r\n        });\r\n    }, [user]);\r\n\r\n    //new message arrive from one user\r\n    useEffect(async () => {\r\n        if (arrivalMessage &&\r\n            currentChat?.members.includes(arrivalMessage.sender)) {\r\n            setMessages((prev) => [...prev, arrivalMessage]);\r\n            await axios.put(config.url + \"/messages/\" + arrivalMessage.messageId).catch((err) => {\r\n                console.log(err);//problem with the server\r\n            });//update the message to seen (server)\r\n            await axios.get(config.url + `/conversations/find/${user._id}/${arrivalMessage.sender}`).then((conversation) => {\r\n                socket.current.emit(\"sendSeen\", {//send to the user that sent the message that he saw the message right now\r\n                    senderId: user._id,\r\n                    receiverId: arrivalMessage.sender,\r\n                    conversation: conversation.data,\r\n                });\r\n            }).catch((err) => {\r\n                if (err.response.status === 404) {\r\n                    console.log(\"conversation not found\");\r\n                }\r\n                else {\r\n                    console.log(err);//problem with the server\r\n                }\r\n            });\r\n        }\r\n    }, [arrivalMessage]);\r\n\r\n    //the message that the current user send have been seen ' now need to update the current chat\r\n    useEffect(async () => {\r\n        if (sendSeen !== null) {\r\n            setCurrentChat(sendSeen.conversation);\r\n        }\r\n    }, [sendSeen]);\r\n\r\n    //currentChat change\r\n    useEffect(() => {\r\n        if (currentChat) {\r\n            const getMessages = async () => {\r\n                try {\r\n                    await axios.get(config.url + \"/messages/\" + currentChat?._id).then(async (res) => {\r\n                        for (let index = res.data.length - 1; index >= 0; index--) {\r\n                            const message = res.data[index];\r\n                            if (message.sender !== user._id) {\r\n                                if (message.seen === false) {\r\n                                    //update message to seen\r\n                                    await axios.put(config.url + \"/messages/\" + message._id).then(async (res) => {\r\n                                        await axios.get(config.url + `/conversations/find/${res.data.updateModel.conversationId}`).then((conversation) => {\r\n                                            socket.current.emit(\"sendSeen\", {\r\n                                                senderId: user._id,\r\n                                                receiverId: message.sender,\r\n                                                conversation: conversation.data,\r\n                                            });\r\n                                        }).catch((err) => {\r\n                                            if (err.response.status === 404) {\r\n                                                console.log(\"conversation not found\");\r\n                                            }\r\n                                            else {\r\n                                                console.log(err);//problem with the server\r\n                                            }\r\n                                        });\r\n                                    }).catch((err) => {\r\n                                        console.log(err);//problem with the server\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        setMessages(res.data);\r\n                    }).catch((err) => {\r\n                        console.log(err);//problem with the server\r\n                    });\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            };\r\n            getMessages();\r\n        }\r\n    }, [currentChat]);\r\n\r\n    //update the other user if the current user typing\r\n    useEffect(() => {\r\n        if (currentChat) {\r\n            const receiverId = currentChat.members.find(\r\n                (member) => member !== user._id\r\n            );\r\n            if (newMessage.length === 0) {\r\n                socket.current.emit(\"sendTyping\", {\r\n                    senderId: user._id,\r\n                    receiverId: receiverId,\r\n                    typing: false,\r\n                });\r\n            }\r\n            if (newMessage.length > 0) {\r\n                socket.current.emit(\"sendTyping\", {\r\n                    senderId: user._id,\r\n                    receiverId: receiverId,\r\n                    typing: true,\r\n                });\r\n            }\r\n        }\r\n    }, [newMessage]);\r\n\r\n    //scrolling messages\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    //send new message\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            sender: user._id,\r\n            text: newMessage,\r\n            seen: false,\r\n            conversationId: currentChat._id,\r\n        };\r\n        const receiverId = currentChat.members.find(\r\n            (member) => member !== user._id\r\n        );\r\n        try {\r\n            await axios.post(config.url + \"/messages\", message).then((res) => {\r\n                const messageId = res.data._id;\r\n                socket.current.emit(\"sendMessage\", {\r\n                    senderId: user._id,\r\n                    receiverId,\r\n                    messageId: messageId,\r\n                    text: newMessage,\r\n                });\r\n                setMessages([...messages, res.data]);\r\n                setNewMessage(\"\");\r\n            }).catch((err) => {\r\n                console.log(err);//problem with the server\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    //add emoji to the input message\r\n    const addEmoji = e => {\r\n        let emoji = e.native;\r\n        setNewMessage(newMessage + emoji)\r\n    };\r\n\r\n    //open and close Alternately all the emojis\r\n    const triggerPicker = () => {\r\n        SetEmojiPicker(!emojiPicker);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"messenger\">\r\n                <div id=\"modal\">\r\n                    <div>\r\n                        <div></div>\r\n                        <button>OK</button>\r\n                        <button>Cancel</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"leftList\">\r\n                    <div className=\"topName\">\r\n                        <div className=\"username\">\r\n                            <div>\r\n                                Hello\r\n                            </div>\r\n                            <span>\r\n                                {user?.username}\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"Button\" onClick={StartChatClick} disabled={selectedUser === null ? true : false}>\r\n                                <img className=\"Button\" src={process.env.PUBLIC_URL + \"images/chatbtn.png\"}></img>\r\n                            </button>\r\n                            <button onClick={StartGameClick} disabled={selectedUser === null ? true : false}>\r\n                                <img className=\"Button\" src={process.env.PUBLIC_URL + \"images/backgammon.png\"}></img>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {onlineUsers.length !== 0 ?\r\n                        <div >\r\n\r\n                            <div className=\"chatOnlineWrapper\">\r\n                                <ChatOnline\r\n                                    initSelectedUser={selectedUser}\r\n                                    onlineUsers={onlineUsers}\r\n                                    currentId={user._id}\r\n                                    onSelectedUser={handleSelectedUser}\r\n                                />\r\n                                <ChatOffline\r\n                                    onlineUsers={onlineUsers}\r\n                                    currentId={user._id}\r\n                                />\r\n                            </div>\r\n\r\n                        </div> : <div className=\"connect\">\r\n                            Find Online Users...\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div >\r\n                    {currentBoard ? (<>\r\n                        <Backgammon EndGame={ResetBackgammon} initSocket={socket.current} userPlayId={user._id} currentBoard={currentBoard} propsBoard={Points}></Backgammon>\r\n                    </>) : \"\"}\r\n                </div>\r\n                {currentChat ? (\r\n                    <div className=\"chat\">\r\n                        <div className=\"chat-container\">\r\n                            <User typing={typing && currentChat.members.find((member) => member !== user._id) === typing.sender ? typing.typing : false}\r\n                                sender={user} userId={selectedUser._id}></User>\r\n                            <div className=\"conversation\">\r\n                                <div className=\"conversation-container\">\r\n                                    <>\r\n                                        {messages.map((m, index) => (\r\n                                            <Message key={index} seen={m.seen} ref={scrollRef} message={m} own={m.sender === user._id} />\r\n                                        ))}\r\n                                    </>\r\n                                    {emojiPicker ? <div className=\"emojiPickerDiv\" ><Picker emoji=\"grinning\" title=\"Choose color\" onSelect={addEmoji} /></div> : \"\"}\r\n                                </div>\r\n\r\n                                <div className=\"conversation-compose\">\r\n                                    <div className=\"emoji\">\r\n                                        <svg className=\"emojiPicker\" onClick={triggerPicker} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" id=\"smiley\" x=\"3147\" y=\"3209\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.153 11.603c.795 0 1.44-.88 1.44-1.962s-.645-1.96-1.44-1.96c-.795 0-1.44.88-1.44 1.96s.645 1.965 1.44 1.965zM5.95 12.965c-.027-.307-.132 5.218 6.062 5.55 6.066-.25 6.066-5.55 6.066-5.55-6.078 1.416-12.13 0-12.13 0zm11.362 1.108s-.67 1.96-5.05 1.96c-3.506 0-5.39-1.165-5.608-1.96 0 0 5.912 1.055 10.658 0zM11.804 1.01C5.61 1.01.978 6.034.978 12.23s4.826 10.76 11.02 10.76S23.02 18.424 23.02 12.23c0-6.197-5.02-11.22-11.216-11.22zM12 21.355c-5.273 0-9.38-3.886-9.38-9.16 0-5.272 3.94-9.547 9.214-9.547a9.548 9.548 0 0 1 9.548 9.548c0 5.272-4.11 9.16-9.382 9.16zm3.108-9.75c.795 0 1.44-.88 1.44-1.963s-.645-1.96-1.44-1.96c-.795 0-1.44.878-1.44 1.96s.645 1.963 1.44 1.963z\" fill=\"#7d8489\" /></svg>\r\n                                    </div>\r\n                                    <input className=\"input-msg\"\r\n                                        id=\"inputMessage\"\r\n                                        name=\"input\"\r\n                                        placeholder=\"Type a message\"\r\n                                        autoComplete=\"off\"\r\n                                        autoFocus\r\n                                        onChange={(e) => setNewMessage(e.target.value)}\r\n                                        value={newMessage}></input>\r\n                                    <div className=\"photo\">\r\n                                        <i className=\"zmdi zmdi-camera\"></i>\r\n                                    </div>\r\n                                    <button className=\"send\" onClick={handleSubmit}>\r\n                                        <div className=\"circle\">\r\n                                            Send\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                ) : \"\"}\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ContactsScreen;","import { useContext, useRef } from \"react\";\r\nimport \"./Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { loginCall } from \"../../apiCalls\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n//import { CircularProgress } from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nconst LoginForm = () => {\r\n    const username = useRef();\r\n    const password = useRef();\r\n    const { isFetching, dispatch } = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        loginCall(\r\n            { username: username.current.value, password: password.current.value },\r\n            dispatch\r\n        );\r\n\r\n    };\r\n    const register = () => {\r\n        history.push('register')\r\n    };\r\n\r\n    return (\r\n        <form id=\"loginform\" onSubmit={handleClick}>\r\n            <h2 id=\"headerTitle\">Login Page</h2>\r\n            <div className=\"row\">\r\n                <label>UserName</label>\r\n                <input\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    required\r\n                    ref={username}\r\n                />\r\n            </div>\r\n            <div className=\"row\">\r\n                <label>Password</label>\r\n                <input\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    ref={password} />\r\n            </div>\r\n            <div id=\"button\" className=\"row\">\r\n                <button type=\"submit\" disabled={isFetching}>\r\n                    Log In\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"ForgotPassword \">\r\n                Forgot Password / Not a member ?\r\n            </div>\r\n            <div id=\"button\" className=\"row\">\r\n                <button className=\"loginRegisterButton\" onClick={register}>\r\n                    Create a New Account\r\n                </button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n\r\n};\r\n\r\nexport default LoginForm;","import axios from \"axios\";\r\nimport { useRef } from \"react\";\r\nimport \"./Register.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport config from '../../config';\r\n\r\nconst LoginForm = () => {\r\n    const username = useRef();\r\n    const email = useRef();\r\n    const password = useRef();\r\n    const passwordAgain = useRef();\r\n    const history = useHistory();\r\n\r\n    const handleClick = async (e) => {\r\n        console.log(\"here\");\r\n        e.preventDefault();\r\n        if (passwordAgain.current.value !== password.current.value) {\r\n            passwordAgain.current.setCustomValidity(\"Passwords don't match!\");\r\n        } else {\r\n            const user = {\r\n                username: username.current.value,\r\n                email: email.current.value,\r\n                password: password.current.value,\r\n            };\r\n            try {\r\n                await axios.post(config.url + \"/auth/register\", user).then((res) => {\r\n                    history.push(\"/login\");\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n                switch (err.response.status) {\r\n                    case 409:\r\n                        alert(err.response.data)\r\n                        break;\r\n                    case 500:\r\n                        console.log(err);//problem with the server\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const login = () => {\r\n        history.push('login')\r\n    };\r\n\r\n    return (\r\n        <form id=\"loginform\" onSubmit={handleClick}>\r\n            <h2 id=\"headerTitle\">Registration Page</h2>\r\n            <div className=\"row\">\r\n                <label>Username</label>\r\n                <input\r\n                    placeholder=\"Username\"\r\n                    required\r\n                    ref={username} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <label>Email</label>\r\n                <input\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    ref={email}\r\n                    type=\"email\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <label>Password</label>\r\n                <input\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    ref={password}\r\n                    type=\"password\"\r\n                    minLength=\"6\" />\r\n            </div>\r\n            <div className=\"row\">\r\n                <label>Password Again</label>\r\n                <input\r\n                    placeholder=\"Password Again\"\r\n                    required\r\n                    ref={passwordAgain}\r\n                    type=\"password\" />\r\n            </div>\r\n            <div id=\"button\" className=\"row\">\r\n                <button type=\"submit\">\r\n                    Sign Up\r\n                </button>\r\n            </div>\r\n            <div id=\"button\" className=\"row\">\r\n                <button className=\"loginRegisterButton\" onClick={login}>\r\n                    Log into Account\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","import \"./signOut.css\";\r\nimport { useRef, useContext, useEffect } from 'react';\r\nimport { logoutCall } from \"../../apiCalls\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nconst SignOut = ({ initHistory }) => {\r\n    const history = useRef(initHistory);\r\n    const currentRout = useRef(\"/\");\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        var answer = window.confirm(\"Are you sure you want to logOut?\")\r\n        if (answer) {\r\n            logoutCall(dispatch);\r\n        }\r\n        else {\r\n            history.current.push(\"/\");\r\n            currentRout.current = \"/\";\r\n        }\r\n    }, []);\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignOut;","import \"./HowToPlay.css\";\r\nconst HowToPlay = () => {\r\n\r\n    return (\r\n        <div className=\"about-section paddingTB60 gray-bg\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 col-sm-6\">\r\n                        <div className=\"about-title clearfix\">\r\n                            <h1>How to play <span>Backgammon</span></h1>\r\n                            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Eaa7KrIc4ys\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                            <h4>Needed</h4>\r\n                            <div>Two players, backgammon board, 15 checkers per player, two dice per player</div>\r\n                            <h4>Terminology</h4>\r\n                            <ul>\r\n                                <li>Checker - game pieces that are moved around the board.</li>\r\n                                <li>Point - a space on the board. The board is made up of 24 points.</li>\r\n                                <li>Middle Bar - the bar in the middle of the game board.</li>\r\n                                <li>Home Board - The six points on the bottom right of the playing board for each player.</li>\r\n                            </ul>\r\n                            <h4>Setup</h4>\r\n                            <p>Players will sit across from each other. One player will move his/her checkers clockwise, and the other player will move his/her checkers counterclockwise.\r\n\r\n                                Put five checkers on the 6-point, three checkers on the 8-point, five checkers on the 13-point, and two checkers on the 24-point. Your opponent will set up his/her checkers to mirror your checkers.</p>\r\n                            <h4>Objective</h4>\r\n                            <p>The object of Backgammon is to move your checkers around the board by rolling dice. The number rolled equals the number of points a checker can move. First, move all your checkers to your home board. Second, move all your checkers off the board.</p>\r\n                            <h4>Game Play</h4>\r\n                            <p>The game begins with each player rolling one die. The player with the higher number rolled gets to use both dice for the first move. Each dice is moved separately and can be moved forward to any point that is not blocked. When your opponent has two or more checkers on a point, that point is blocked. If the point has your own checkers, no checkers, or only one opponent checker, the point is open.\r\n                                When both dice are rolled with the same number, the player will move double. For example, if double threes are rolled, the player will move three points four times.\r\n                                When a player moves a checker onto a point that only has one opponent checker, the opponent’s checker is placed on the middle bar. Any checker on the middle bar has to be returned into play before making any other moves. A checker returns to the board on your farthest point. (i.e., the 24th point).</p>\r\n                            <h4>Win</h4>\r\n                            <p>Once a player’s checkers are all within his/her home board, he/she can begin removing checkers off the board. The first player to remove all of his/her checkers from the board wins the game.</p>\r\n                            <h4>Rules</h4>\r\n                            <ul>\r\n                                <li>If a higher number is rolled than you have while removing checkers from the board, the farthest checker is to be removed.</li>\r\n                                <li>If a player is unable to make a legal move with one or both dice, the roll is forfeited.</li>\r\n                                <li>If a player has no checkers off the board when his opponent has removed all of his checkers, it is known as a Gammon and is worth a double game.</li>\r\n                                <li>If a player still has a checker in his opponent’s home board or on the bar and his opponent has removed all of his checkers, it is known as a backgammon and is worth a triple game.</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowToPlay;","import \"./About.css\";\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about-section paddingTB60 gray-bg \">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-7 col-sm-6\">\r\n                        <div className=\"about-title clearfix\">\r\n                            <h1>About <span>TalkBack</span></h1>\r\n                            <h3>TalkBack is a online chat WebSite </h3>\r\n                            <p className=\"about-paddingB\">In TalkBack you can chat with other users easily!</p>\r\n                            <p>In addition, you can also play against them a backgammon online!!!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","import 'App.css';\n\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { AuthContext } from \"./context/AuthContext\";\nimport { useContext, useEffect } from 'react';\nimport axios from \"axios\";\nimport { logoutCall } from \"./apiCalls\";\nimport config from '../src/config';\n\nimport Home from 'Views/Home/Home';\nimport TopBar from './components/topbar/Topbar'\nimport ContactScreen from 'Views/ContactScreen/ContactScreen';\nimport Login from 'Views/Login/Login';\nimport Register from \"Views/Register/Register\";\nimport SignOut from \"Views/signOut/signOut\";\nimport HowToPlay from \"Views/HowToPlay/HowToPlay\";\nimport About from \"Views/About/About\";\n\nconst App = () => {\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n  const { dispatch } = useContext(AuthContext);\n  useEffect(async () => {\n    if (user) {\n      await axios.get(config.url + `/auth/isUserAuth`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      }).then((response) => {\n        if (response.data.auth === false) {\n          alert(\"your token is expired\")\n          logoutCall(dispatch);\n        }\n      }).catch((err) => {\n        console.log(err);//problem with the server\n      })\n    }\n  }, []);\n  return (\n    <>\n      <TopBar initHistory={history} initUser={user}></TopBar>\n      <Switch>\n        <Route exact path=\"/\">\n          {user ? <Home /> : <Register />}\n        </Route>\n        <Route path=\"/signOut\" >\n          {user ? <SignOut initHistory={history} /> : <Redirect to=\"/SendMessage\" />\n          }</Route>\n        <Route path=\"/login\">\n          {user ? <Redirect to=\"/SendMessage\" /> : <Login />}\n        </Route>\n        <Route path=\"/register\">\n          {user ? <Redirect to=\"/\" /> : <Register />}\n        </Route>\n        <Route path=\"/SendMessage\" >\n          {user ? <ContactScreen /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/Backgammon\" >\n          {user ? <ContactScreen /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/HowToPlay\" component={HowToPlay}></Route>\n        <Route path=\"/About\" component={About}></Route>\n      </Switch>\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { AuthContextProvider } from \"./context/AuthContext\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}